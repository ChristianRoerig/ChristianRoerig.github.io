[{"authors":["Christian Roerig"],"categories":null,"content":"I am a PhD candidate in the department of economics at the University of Cambridge. My primary research interests lie in macroeconomics, particularly the effect of firm dynamics and heterogeneity on aggregate outcomes. Furthermore, I am interested in the issue of identification in macroeconomics, employing tools from econometrics and machine learning.\nI received an MSc in Economics from Universidad Carlos III in Madrid and an MSc in Engineering and Management from Karlsruhe Institute of Technology. I have experiences as a data scientist and economic/business consultant.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/christian-roerig/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/christian-roerig/","section":"authors","summary":"I am a PhD candidate in the department of economics at the University of Cambridge. My primary research interests lie in macroeconomics, particularly the effect of firm dynamics and heterogeneity on aggregate outcomes.","tags":null,"title":"Christian Roerig","type":"authors"},{"authors":null,"categories":null,"content":"Sentiment analysis Analysing Bolsonaro\u0026rsquo;s tweets during the Covid19 pandemic Setup # General:\rimport tweepy # To consume Twitter's API\rimport pandas as pd # To handle data\rimport numpy as np # For number computing\rimport json\rimport csv\r# translations\rimport deepl\r# For plotting and visualization:\rfrom IPython.display import display\rimport matplotlib.pyplot as plt\rimport seaborn as sns\r%matplotlib inline\r Twitter access # read json\rwith open('api_keys.json') as f:\rcredentials = json.load(f)\r # API's setup:\rdef twitter_setup():\r# Authentication and access using keys:\rauth = tweepy.OAuthHandler(credentials['consumer_key'], credentials['consumer_secret'])\rauth.set_access_token(credentials['access_token'], credentials['access_token_secret'])\r# Return API with authentication:\rapi = tweepy.API(auth)\rreturn api\r Get recent tweets of Bolsonaro def get_all_tweets(screen_name, credentials):\r#Twitter only allows access to a users most recent 3240 tweets with this method\r#authorize twitter, initialize tweepy\rauth = tweepy.OAuthHandler(credentials['consumer_key'], credentials['consumer_secret'])\rauth.set_access_token(credentials['access_token'], credentials['access_token_secret'])\rapi = tweepy.API(auth)\r#initialize a list to hold all the tweepy Tweets\ralltweets = [] #make initial request for most recent tweets (200 is the maximum allowed count)\rnew_tweets = api.user_timeline(screen_name = screen_name,count=200)\r#save most recent tweets\ralltweets.extend(new_tweets)\r#save the id of the oldest tweet less one\roldest = alltweets[-1].id - 1\r#keep grabbing tweets until there are no tweets left to grab\rwhile len(new_tweets) \u0026gt; 0:\rprint(f\u0026quot;getting tweets before {oldest}\u0026quot;)\r#all subsiquent requests use the max_id param to prevent duplicates\rnew_tweets = api.user_timeline(screen_name = screen_name,count=200,max_id=oldest)\r#save most recent tweets\ralltweets.extend(new_tweets)\r#update the id of the oldest tweet less one\roldest = alltweets[-1].id - 1\rprint(f\u0026quot;...{len(alltweets)} tweets downloaded so far\u0026quot;)\rreturn alltweets\r # get tweets\r# Jair\r#alltweets = get_all_tweets(\u0026quot;jairbolsonaro\u0026quot;, credentials)\r# get sons' tweets\r# Flavio\r#alltweets = get_all_tweets(\u0026quot;FlavioBolsonaro\u0026quot;, credentials)\r# Carlos\r#alltweets = get_all_tweets(\u0026quot;CarlosBolsonaro\u0026quot;, credentials)\r# Eduardo\ralltweets = get_all_tweets(\u0026quot;BolsonaroSP\u0026quot;, credentials)\r getting tweets before 1259107396909219839\r...399 tweets downloaded so far\rgetting tweets before 1256921349634822147\r...599 tweets downloaded so far\rgetting tweets before 1253107691460886527\r...799 tweets downloaded so far\rgetting tweets before 1250422025174171653\r...997 tweets downloaded so far\rgetting tweets before 1247643770818039807\r...1196 tweets downloaded so far\rgetting tweets before 1244772304640446463\r...1395 tweets downloaded so far\rgetting tweets before 1242815692606451713\r...1595 tweets downloaded so far\rgetting tweets before 1240322132091027456\r...1793 tweets downloaded so far\rgetting tweets before 1238592246045454344\r...1992 tweets downloaded so far\rgetting tweets before 1236135535988662272\r...2189 tweets downloaded so far\rgetting tweets before 1234114139615879168\r...2387 tweets downloaded so far\rgetting tweets before 1230336492654022655\r...2587 tweets downloaded so far\rgetting tweets before 1227285030541631488\r...2786 tweets downloaded so far\rgetting tweets before 1224711822189658118\r...2985 tweets downloaded so far\rgetting tweets before 1221647265393082367\r...3182 tweets downloaded so far\rgetting tweets before 1218929644621238280\r...3196 tweets downloaded so far\rgetting tweets before 1218662810525339647\r...3196 tweets downloaded so far\r # save tweets in data frame\rdata = pd.DataFrame(data=[tweet.text for tweet in alltweets], columns=['Tweets'])\r#data['Tweets_en'] = data['Tweets'].apply(translator.translate)\rdata['len'] = np.array([len(tweet.text) for tweet in alltweets])\rdata['ID'] = np.array([tweet.id for tweet in alltweets])\rdata['Date'] = np.array([tweet.created_at for tweet in alltweets])\rdata['Source'] = np.array([tweet.source for tweet in alltweets])\rdata['Likes'] = np.array([tweet.favorite_count for tweet in alltweets])\rdata['Retweets'] = np.array([tweet.retweet_count for tweet in alltweets])\r data.head(10)\r \r.dataframe tbody tr th:only-of-type {\rvertical-align: middle;\r}\r.dataframe tbody tr th {\rvertical-align: top;\r}\r.dataframe thead th {\rtext-align: right;\r}\r \n\r\rTweets\rlen\rID\rDate\rSource\rLikes\rRetweets\r\r\r\r\r0\rLive com Vereador de Salvador-BA, Alexandre Al...\r140\r1261469981503631360\r2020-05-16 01:34:15\rTwitter for iPhone\r1364\r229\r\r\r1\rHoje gravei a nova edição de O Brasil Precisa ...\r139\r1261462877057118208\r2020-05-16 01:06:01\rTwitter for iPhone\r4324\r652\r\r\r2\rRT @BolsonaroSP: Exemplo a ser seguido por com...\r140\r1261432100651102208\r2020-05-15 23:03:43\rTwitter for iPhone\r0\r4053\r\r\r3\rRT @BolsonaroSP: Hoje às 20:00h farei live com...\r140\r1261432089502552064\r2020-05-15 23:03:41\rTwitter for iPhone\r0\r340\r\r\r4\rRT @jairbolsonaro: -Palácio do Planalto (15/05...\r77\r1261414590056771584\r2020-05-15 21:54:08\rTwitter for iPhone\r0\r5741\r\r\r5\rExemplo a ser seguido por comerciantes para pr...\r139\r1261414438554472453\r2020-05-15 21:53:32\rTwitter for iPhone\r12722\r4053\r\r\r6\rHoje às 20:00h farei live com o Vereador de Sa...\r140\r1261398834191663104\r2020-05-15 20:51:32\rTwitter for iPhone\r1944\r340\r\r\r7\r@Dondiegolaveg4 @jairbolsonaro https://t.co/NQ...\r54\r1261396631716495360\r2020-05-15 20:42:47\rTwitter for iPhone\r371\r67\r\r\r8\r@GaloVeio_GW @Gilsonmirandaj @jairbolsonaro Kk...\r50\r1261396533301444609\r2020-05-15 20:42:23\rTwitter for iPhone\r2\r0\r\r\r9\rHoje o Governo @JairBolsonaro completa 500 DIA...\r140\r1261395598718259200\r2020-05-15 20:38:40\rTwitter for iPhone\r28673\r5626\r\r\r\r\r# save tweets to csv\rdata.to_csv(\u0026quot;Bolsonaro_Eduardo_tweets.csv\u0026quot;,encoding='utf-8-sig')\r Visualize tweets over time # crop data for COVID timeframe\rdata = data.loc[data['Date'] \u0026gt; \u0026quot;2020-01-30 00:00:00\u0026quot;]\r# Likes vs retweets visualization:\rtfav = pd.Series(data=data['Likes'].values, index=data['Date'])\rtret = pd.Series(data=data['Retweets'].values, index=data['Date'])\rtfav.plot(figsize=(16,4), label=\u0026quot;Likes\u0026quot;, legend=True)\rtret.plot(figsize=(16,4), label=\u0026quot;Retweets\u0026quot;, legend=True);\r tweet_daily = pd.Series(data.groupby(pd.Grouper(key='Date', freq='D', convention='start')).size())\rtweet_daily.plot(figsize=(16,4),label=\u0026quot;Daily tweets\u0026quot;, legend=True)\r \u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x21ceb1b1f48\u0026gt;\r Pre-process tweets for topic/sentiment analysis # Drop short tweets (likely URLs)\rdata = data.loc[data['len'] \u0026gt; 25]\r# Drop URLs in Tweets\rimport re\rfor index, row in data.iterrows():\rrow[\u0026quot;Tweets\u0026quot;] = re.sub(r'http\\S+', '', row[\u0026quot;Tweets\u0026quot;])\r len(data)\r 2911\r # Translate tweets\rimport requests\rdef translate(text_to_translate):\rtext = {\r'auth_key': (None, '3387d291-62f1-85c6-e750-e008a06893bf'),\r'text': (None, text_to_translate),\r'target_lang': (None, 'EN')\r}\rresponse = requests.post('https://api.deepl.com/v2/translate', files=text)\rtranslation_json = json.loads(response.text)\rtranslation = translation_json['translations'][0]['text']\rreturn translation\rdata[\u0026quot;Tweets_en\u0026quot;] = data[\u0026quot;Tweets\u0026quot;].apply(translate)\r# Save translated tweets\rdata.to_csv(\u0026quot;Bolsonaro_Eduardo_tweets_en.csv\u0026quot;,encoding='utf-8-sig')\r # read in translated tweets\rdata = pd.read_csv(\u0026quot;Bolsonaro_Eduardo_tweets_en.csv\u0026quot;,encoding='utf-8-sig')\r#data['Date'] = pd.to_datetime(data['Date'], format='%d-%m-%Y %H:%M')\r#data['Date'] = data['Date'].dt.strftime('%m/%d/%Y %H:%M')\r#data = data.set_index('Date')\r data.head(10)\r \r.dataframe tbody tr th:only-of-type {\rvertical-align: middle;\r}\r.dataframe tbody tr th {\rvertical-align: top;\r}\r.dataframe thead th {\rtext-align: right;\r}\r \n\r\rUnnamed: 0\rTweets\rlen\rID\rDate\rSource\rLikes\rRetweets\rTweets_en\r\r\r\r\r0\r0\rLive com Vereador de Salvador-BA, Alexandre Al...\r140\r1261469981503631360\r2020-05-16 01:34:15\rTwitter for iPhone\r1364\r229\rLive with Salvador-BA Councilman Alexandre All...\r\r\r1\r1\rHoje gravei a nova edição de O Brasil Precisa ...\r139\r1261462877057118208\r2020-05-16 01:06:01\rTwitter for iPhone\r4324\r652\rToday I recorded the new edition of O Brasil P...\r\r\r2\r2\rRT @BolsonaroSP: Exemplo a ser seguido por com...\r140\r1261432100651102208\r2020-05-15 23:03:43\rTwitter for iPhone\r0\r4053\rRT @BolsonaroSP: Example to be followed by tra...\r\r\r3\r3\rRT @BolsonaroSP: Hoje às 20:00h farei live com...\r140\r1261432089502552064\r2020-05-15 23:03:41\rTwitter for iPhone\r0\r340\rRT @BolsonaroSP: Today at 8:00 pm I'll do live...\r\r\r4\r4\rRT @jairbolsonaro: -Palácio do Planalto (15/05...\r77\r1261414590056771584\r2020-05-15 21:54:08\rTwitter for iPhone\r0\r5741\rRT @jairbolsonaro: -PalÃ¡cio do Planalto (15/0...\r\r\r5\r5\rExemplo a ser seguido por comerciantes para pr...\r139\r1261414438554472453\r2020-05-15 21:53:32\rTwitter for iPhone\r12722\r4053\rExample to be followed by traders to press gov...\r\r\r6\r6\rHoje às 20:00h farei live com o Vereador de Sa...\r140\r1261398834191663104\r2020-05-15 20:51:32\rTwitter for iPhone\r1944\r340\rToday at 8:00 pm I will live with the Councill...\r\r\r7\r7\r@Dondiegolaveg4 @jairbolsonaro https://t.co/NQ...\r54\r1261396631716495360\r2020-05-15 20:42:47\rTwitter for iPhone\r371\r67\r@Dondiegolaveg4 @jairbolsonaro https://t.co/NQ...\r\r\r8\r8\r@GaloVeio_GW @Gilsonmirandaj @jairbolsonaro Kk...\r50\r1261396533301444609\r2020-05-15 20:42:23\rTwitter for iPhone\r2\r0\r@GaloVeio_GW @Gilsonmirandaj @jairbolsonaro Kkkkk\r\r\r9\r9\rHoje o Governo @JairBolsonaro completa 500 DIA...\r140\r1261395598718259200\r2020-05-15 20:38:40\rTwitter for iPhone\r28673\r5626\rToday the government @JairBolsonaro completes ...\r\r\r\r\rTokenize and lemmatize tweets # function to tokenize tweets\rimport spacy\rimport re\rspacy.load('en_core_web_sm')\rfrom spacy.lang.en import English\rparser = English()\rdef tokenize(text):\rlda_tokens = []\rtokens = parser(text)\rfor token in tokens:\rif token.orth_.isspace():\rcontinue\relif token.like_url:\rlda_tokens.append('URL')\relif token.orth_.startswith('@'):\rlda_tokens.append('')\relse:\rlda_tokens.append(token.lower_)\rreturn lda_tokens\r# function to lemmatize tweets\rimport nltk\rnltk.download('wordnet')\rfrom nltk.corpus import wordnet as wn\rdef get_lemma(word):\rlemma = wn.morphy(word)\rif lemma is None:\rreturn word\relse:\rreturn lemma\rfrom nltk.stem.wordnet import WordNetLemmatizer\rdef get_lemma2(word):\rreturn WordNetLemmatizer().lemmatize(word)\r# look up stopwords nltk.download('stopwords')\ren_stop = set(nltk.corpus.stopwords.words('english'))\r# Additional stop words to be removed from text\radditional_stop_words=['twitter','com','pic','rt','via','youtube']\r# function to clean tweets, i.e. tokenizing and lemmatizing\rdef prepare_text_for_lda(text):\rtokens = tokenize(text)\rtokens = [token for token in tokens if len(token) \u0026gt; 4]\rtokens = [token for token in tokens if token not in en_stop]\rtokens = [token for token in tokens if token not in additional_stop_words]\rtokens = [get_lemma(token) for token in tokens]\rreturn tokens\rdata[\u0026quot;Tweets_processed\u0026quot;] = data[\u0026quot;Tweets_en\u0026quot;].apply(prepare_text_for_lda)\r [nltk_data] Downloading package wordnet to\r[nltk_data] C:\\Users\\chris\\AppData\\Roaming\\nltk_data...\r[nltk_data] Package wordnet is already up-to-date!\r[nltk_data] Downloading package stopwords to\r[nltk_data] C:\\Users\\chris\\AppData\\Roaming\\nltk_data...\r[nltk_data] Package stopwords is already up-to-date!\r data[\u0026quot;Tweets_processed\u0026quot;][1:10]\r 1 [today, record, edition, brasil, precisa, sabe...\r2 [example, follow, trader, pressure, governor, ...\r3 [today, councillor, salvador, alexandre, alelu...\r4 [-palã¡cio, planalto, 15/05, 17:40]\r5 [example, follow, trader, press, governor, tra...\r6 [today, councillor, salvador, alexandre, alelu...\r7 []\r8 [kkkkk]\r9 [today, government, complete, first, brazil, w...\rName: Tweets_processed, dtype: object\r # FIXME: Add bigrams\r Filter topics related to Covid-19 keywords = ['covid-19','vocid-19', 'coronavirus', 'pandemic', 'hospital','emergency','distancing','social','distance','demonstration','test','equipment','health','measure']\rcovid_subsample = data[pd.DataFrame(data.Tweets_processed.tolist()).isin(keywords).any(1)]\r covid_subsample[\u0026quot;Tweets_processed\u0026quot;][1:5]\r 10 [difficulty, cause, pandemic, brazilian, agric...\r16 [relative, need, hospital]\r23 [relative, need, hospital]\r26 [coronavirus, attack, lung, virus, attack, jou...\rName: Tweets_processed, dtype: object\r len(covid_subsample)\r 356\r LDA topic analysis text_data = covid_subsample[\u0026quot;Tweets_processed\u0026quot;]\rfrom gensim import corpora\rdictionary = corpora.Dictionary(text_data)\rcorpus = [dictionary.doc2bow(text) for text in text_data]\rimport pickle\rpickle.dump(corpus, open('corpus.pkl', 'wb'))\rdictionary.save('dictionary.gensim')\r import gensim\rNUM_TOPICS = 4\rldamodel = gensim.models.ldamodel.LdaModel(corpus, num_topics = NUM_TOPICS, id2word=dictionary, passes=15)\rldamodel.save('model5.gensim')\rtopics = ldamodel.print_topics(num_words=6)\rfor topic in topics:\rprint(topic)\r (0, '0.024*\u0026quot;social\u0026quot; + 0.024*\u0026quot;coronavirus\u0026quot; + 0.019*\u0026quot;network\u0026quot; + 0.015*\u0026quot;test\u0026quot; + 0.013*\u0026quot;health\u0026quot; + 0.009*\u0026quot;emergency\u0026quot;')\r(1, '0.018*\u0026quot;pandemic\u0026quot; + 0.018*\u0026quot;people\u0026quot; + 0.013*\u0026quot;covid-19\u0026quot; + 0.012*\u0026quot;government\u0026quot; + 0.012*\u0026quot;coronavirus\u0026quot; + 0.011*\u0026quot;measure\u0026quot;')\r(2, '0.026*\u0026quot;covid-19\u0026quot; + 0.016*\u0026quot;coronavirus\u0026quot; + 0.015*\u0026quot;hydroxychloroquine\u0026quot; + 0.012*\u0026quot;doctor\u0026quot; + 0.010*\u0026quot;health\u0026quot; + 0.009*\u0026quot;demonstration\u0026quot;')\r(3, '0.062*\u0026quot;coronavirus\u0026quot; + 0.022*\u0026quot;president\u0026quot; + 0.018*\u0026quot;health\u0026quot; + 0.018*\u0026quot;measure\u0026quot; + 0.017*\u0026quot;government\u0026quot; + 0.011*\u0026quot;fight\u0026quot;')\r dictionary = gensim.corpora.Dictionary.load('dictionary.gensim')\rcorpus = pickle.load(open('corpus.pkl', 'rb'))\rlda = gensim.models.ldamodel.LdaModel.load('model5.gensim')\rimport pyLDAvis.gensim\rlda_display = pyLDAvis.gensim.prepare(lda, corpus, dictionary, sort_topics=False)\rpyLDAvis.display(lda_display)\r \rvar ldavis_el786423234483639764619859254_data = {\u0026ldquo;mdsDat\u0026rdquo;: {\u0026ldquo;x\u0026rdquo;: [0.09331666753072418, 0.004057134324795556, 0.029237589104836426, -0.12661139096035615], \u0026ldquo;y\u0026rdquo;: [0.01985069631040109, -0.1167279040821729, 0.06985568966988137, 0.02702151810189052], \u0026ldquo;topics\u0026rdquo;: [1, 2, 3, 4], \u0026ldquo;cluster\u0026rdquo;: [1, 1, 1, 1], \u0026ldquo;Freq\u0026rdquo;: [24.470203399658203, 19.649639129638672, 16.3651123046875, 39.51504898071289]}, \u0026ldquo;tinfo\u0026rdquo;: {\u0026ldquo;Term\u0026rdquo;: [\u0026ldquo;network\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;people\u0026rdquo;, \u0026ldquo;president\u0026rdquo;, \u0026ldquo;hydroxychloroquine\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;doctor\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;case\u0026rdquo;, \u0026ldquo;brazil\u0026rdquo;, \u0026ldquo;combat\u0026rdquo;, \u0026ldquo;billion\u0026rdquo;, \u0026ldquo;treatment\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;arrest\u0026rdquo;, \u0026ldquo;take\u0026rdquo;, \u0026ldquo;witzel\u0026rdquo;, \u0026ldquo;street\u0026rdquo;, \u0026ldquo;negative\u0026rdquo;, \u0026ldquo;vocid-19\u0026rdquo;, \u0026ldquo;office\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;science\u0026rdquo;, \u0026ldquo;prevent\u0026rdquo;, \u0026ldquo;positive\u0026rdquo;, \u0026ldquo;advisor\u0026rdquo;, \u0026ldquo;phares\u0026rdquo;, \u0026ldquo;network\u0026rdquo;, \u0026ldquo;defend\u0026rdquo;, \u0026ldquo;shooting\u0026rdquo;, \u0026ldquo;pistol\u0026rdquo;, \u0026ldquo;thing\u0026rdquo;, \u0026ldquo;anyone\u0026rdquo;, \u0026ldquo;profile\u0026rdquo;, \u0026ldquo;provide\u0026rdquo;, \u0026ldquo;money\u0026rdquo;, \u0026ldquo;defense\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;positive\u0026rdquo;, \u0026ldquo;collapse\u0026rdquo;, \u0026ldquo;13,979\u0026rdquo;, \u0026ldquo;control\u0026rdquo;, \u0026ldquo;average\u0026rdquo;, \u0026ldquo;approve\u0026rdquo;, \u0026ldquo;flexibility\u0026rdquo;, \u0026ldquo;recife\u0026rdquo;, \u0026ldquo;capital\u0026rdquo;, \u0026ldquo;expenditure\u0026rdquo;, \u0026ldquo;question\u0026rdquo;, \u0026ldquo;criticize\u0026rdquo;, \u0026ldquo;phone\u0026rdquo;, \u0026ldquo;camuflagem\u0026rdquo;, \u0026ldquo;sauer\u0026rdquo;, \u0026ldquo;recently\u0026rdquo;, \u0026ldquo;coming\u0026rdquo;, \u0026ldquo;stadium\u0026rdquo;, \u0026ldquo;become\u0026rdquo;, \u0026ldquo;medium\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;arrive\u0026rdquo;, \u0026ldquo;would\u0026rdquo;, \u0026ldquo;state\u0026rdquo;, \u0026ldquo;press\u0026rdquo;, \u0026ldquo;attack\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;brasilia\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;congress\u0026rdquo;, \u0026ldquo;still\u0026rdquo;, \u0026ldquo;system\u0026rdquo;, \u0026ldquo;world\u0026rdquo;, \u0026ldquo;already\u0026rdquo;, \u0026ldquo;always\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;federal\u0026rdquo;, \u0026ldquo;release\u0026rdquo;, \u0026ldquo;president\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;distance\u0026rdquo;, \u0026ldquo;science\u0026rdquo;, \u0026ldquo;prevent\u0026rdquo;, \u0026ldquo;elderly\u0026rdquo;, \u0026ldquo;study\u0026rdquo;, \u0026ldquo;60000\u0026rdquo;, \u0026ldquo;prudent\u0026rdquo;, \u0026ldquo;flag\u0026rdquo;, \u0026ldquo;overcrowd\u0026rdquo;, \u0026ldquo;preach\u0026rdquo;, \u0026ldquo;child\u0026rdquo;, \u0026ldquo;want\u0026rdquo;, \u0026ldquo;birthday\u0026rdquo;, \u0026ldquo;security\u0026rdquo;, \u0026ldquo;-found\u0026rdquo;, \u0026ldquo;confrontation\u0026rdquo;, \u0026ldquo;natural\u0026rdquo;, \u0026ldquo;-citizens\u0026rdquo;, \u0026ldquo;protection\u0026rdquo;, \u0026ldquo;serious\u0026rdquo;, \u0026ldquo;spend\u0026rdquo;, \u0026ldquo;start\u0026rdquo;, \u0026ldquo;everything\u0026rdquo;, \u0026ldquo;think\u0026rdquo;, \u0026ldquo;demand\u0026rdquo;, \u0026ldquo;website\u0026rdquo;, \u0026ldquo;technology\u0026rdquo;, \u0026ldquo;destoa\u0026rdquo;, \u0026ldquo;revenue\u0026rdquo;, \u0026ldquo;dealer\u0026rdquo;, \u0026ldquo;seize\u0026rdquo;, \u0026ldquo;people\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;brazil\u0026rdquo;, \u0026ldquo;number\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;federal\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;minister\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;without\u0026rdquo;, \u0026ldquo;infect\u0026rdquo;, \u0026ldquo;always\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;covid\u0026rdquo;, \u0026ldquo;speech\u0026rdquo;, \u0026ldquo;medical\u0026rdquo;, \u0026ldquo;presence\u0026rdquo;, \u0026ldquo;suspicion\u0026rdquo;, \u0026ldquo;governor\u0026rdquo;, \u0026ldquo;quarantine\u0026rdquo;, \u0026ldquo;distance\u0026rdquo;, \u0026ldquo;street\u0026rdquo;, \u0026ldquo;negative\u0026rdquo;, \u0026ldquo;vocid-19\u0026rdquo;, \u0026ldquo;advisor\u0026rdquo;, \u0026ldquo;phares\u0026rdquo;, \u0026ldquo;courage\u0026rdquo;, \u0026ldquo;doctor\u0026rdquo;, \u0026ldquo;hydroxychloroquine\u0026rdquo;, \u0026ldquo;consider\u0026rdquo;, \u0026ldquo;case\u0026rdquo;, \u0026ldquo;price\u0026rdquo;, \u0026ldquo;protect\u0026rdquo;, \u0026ldquo;26-year\u0026rdquo;, \u0026ldquo;energy\u0026rdquo;, \u0026ldquo;try\u0026rdquo;, \u0026ldquo;covidan\u0026rdquo;, \u0026ldquo;lastly\u0026rdquo;, \u0026ldquo;relative\u0026rdquo;, \u0026ldquo;inflate\u0026rdquo;, \u0026ldquo;afraid\u0026rdquo;, \u0026ldquo;malaysia\u0026rdquo;, \u0026ldquo;since\u0026rdquo;, \u0026ldquo;-secretary\u0026rdquo;, \u0026ldquo;1,000\u0026rdquo;, \u0026ldquo;demonstrate\u0026rdquo;, \u0026ldquo;comparison\u0026rdquo;, \u0026ldquo;office\u0026rdquo;, \u0026ldquo;singer\u0026rdquo;, \u0026ldquo;baianos\u0026rdquo;, \u0026ldquo;timel\u0026rdquo;, \u0026ldquo;respirator\u0026rdquo;, \u0026ldquo;arrest\u0026rdquo;, \u0026ldquo;works\u0026rdquo;, \u0026ldquo;treatment\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;witzel\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;epidemic\u0026rdquo;, \u0026ldquo;report\u0026rdquo;, \u0026ldquo;never\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;article\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;place\u0026rdquo;, \u0026ldquo;take\u0026rdquo;, \u0026ldquo;video\u0026rdquo;, \u0026ldquo;contract\u0026rdquo;, \u0026ldquo;teich\u0026rdquo;, \u0026ldquo;nelson\u0026rdquo;, \u0026ldquo;announce\u0026rdquo;, \u0026ldquo;combat\u0026rdquo;, \u0026ldquo;billion\u0026rdquo;, \u0026ldquo;little\u0026rdquo;, \u0026ldquo;march\u0026rdquo;, \u0026ldquo;campaign\u0026rdquo;, \u0026ldquo;president\u0026rdquo;, \u0026ldquo;spoke\u0026rdquo;, \u0026ldquo;globo\u0026rdquo;, \u0026ldquo;videoconference\u0026rdquo;, \u0026ldquo;prevention\u0026rdquo;, \u0026ldquo;result\u0026rdquo;, \u0026ldquo;check\u0026rdquo;, \u0026ldquo;doria\u0026rdquo;, \u0026ldquo;country\u0026rdquo;, \u0026ldquo;situation\u0026rdquo;, \u0026ldquo;delivery\u0026rdquo;, \u0026ldquo;15,000\u0026rdquo;, \u0026ldquo;3,000\u0026rdquo;, \u0026ldquo;watch\u0026rdquo;, \u0026ldquo;thousand\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;secret\u0026rdquo;, \u0026ldquo;record\u0026rdquo;, \u0026ldquo;decide\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;corona\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;action\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;minister\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;release\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;share\u0026rdquo;, \u0026ldquo;paulo\u0026rdquo;, \u0026ldquo;trump\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;death\u0026rdquo;], \u0026ldquo;Freq\u0026rdquo;: [12.0, 20.0, 13.0, 26.0, 8.0, 33.0, 14.0, 6.0, 20.0, 25.0, 92.0, 4.0, 11.0, 11.0, 11.0, 6.0, 16.0, 6.0, 8.0, 7.0, 3.0, 3.0, 3.0, 3.0, 13.0, 3.0, 3.0, 4.0, 2.0, 2.0, 11.969191551208496, 2.9692983627319336, 2.967947006225586, 2.9679315090179443, 2.967642068862915, 2.962177276611328, 2.2705984115600586, 2.26706862449646, 2.2632815837860107, 2.2594943046569824, 15.54395866394043, 3.6728954315185547, 2.098874807357788, 1.5718984603881836, 1.5718973875045776, 1.5718960762023926, 1.571895718574524, 1.5718954801559448, 1.5718951225280762, 1.5718947649002075, 1.5718940496444702, 1.5718930959701538, 1.5718905925750732, 1.5718870162963867, 1.5718847513198853, 1.5718810558319092, 1.5718793869018555, 1.571874976158142, 1.571864128112793, 1.5718398094177246, 3.6517844200134277, 9.811744689941406, 2.9735989570617676, 3.6851511001586914, 3.657034397125244, 3.432622194290161, 2.2784323692321777, 5.576033592224121, 15.364423751831055, 8.260237693786621, 2.9816362857818604, 5.07114315032959, 2.2706243991851807, 2.2684030532836914, 2.2553746700286865, 2.27921199798584, 2.9696202278137207, 2.5602970123291016, 3.3759515285491943, 5.028782367706299, 3.187826633453369, 2.977470874786377, 3.652317762374878, 3.7548177242279053, 2.9509401321411133, 2.278872013092041, 2.8293302059173584, 2.8259694576263428, 2.163754940032959, 2.1471714973449707, 1.4979556798934937, 1.4979532957077026, 1.4979493618011475, 1.4979486465454102, 1.4979485273361206, 1.497946858406067, 1.4979461431503296, 1.4979413747787476, 1.4979413747787476, 1.497941017150879, 1.4979407787322998, 1.4979404211044312, 1.4979356527328491, 1.4979265928268433, 1.4979169368743896, 1.4979157447814941, 1.497912049293518, 1.4979093074798584, 1.497908592224121, 1.4978998899459839, 1.4978547096252441, 1.4977227449417114, 1.4970115423202515, 1.4965927600860596, 1.4965829849243164, 1.4965721368789673, 9.445122718811035, 9.459224700927734, 5.526413917541504, 2.1551568508148193, 6.925489902496338, 6.425810813903809, 5.561095714569092, 3.239954710006714, 3.184537410736084, 5.507724761962891, 3.6625351905822754, 3.1077077388763428, 2.8441126346588135, 3.5040841102600098, 6.083441257476807, 3.3045806884765625, 2.1735339164733887, 2.176668882369995, 1.867630124092102, 2.1615962982177734, 1.5056294202804565, 1.5045444965362549, 1.5035334825515747, 1.5032459497451782, 1.502978801727295, 1.5068668127059937, 1.506690502166748, 1.5049628019332886, 2.6797733306884766, 2.6746068000793457, 2.6550285816192627, 2.0567429065704346, 2.0567357540130615, 2.0553698539733887, 5.115640640258789, 6.5093607902526855, 1.9274297952651978, 3.3346312046051025, 1.4238953590393066, 1.4238927364349365, 1.4238871335983276, 1.4238840341567993, 1.4238804578781128, 1.4238784313201904, 1.423833966255188, 1.4237723350524902, 1.4222509860992432, 1.4203354120254517, 1.4204788208007812, 1.4203989505767822, 1.416504979133606, 1.4165027141571045, 1.40654456615448, 1.3865652084350586, 2.702932596206665, 0.7910041213035583, 0.7910033464431763, 0.7910033464431763, 1.8358712196350098, 3.3313181400299072, 1.425106406211853, 2.9689927101135254, 11.07068920135498, 2.6712400913238525, 3.974093437194824, 3.389704465866089, 7.016455173492432, 3.3223085403442383, 4.247829437255859, 2.063446283340454, 2.058943033218384, 2.0717885494232178, 2.6870601177215576, 1.7378450632095337, 2.0614445209503174, 1.7528276443481445, 1.6694772243499756, 1.4424687623977661, 7.758479595184326, 4.733194351196289, 4.733081340789795, 4.730428218841553, 4.724939823150635, 4.701956272125244, 10.06789779663086, 10.043389320373535, 3.9757847785949707, 3.218480110168457, 3.2181215286254883, 22.89010238647461, 2.4611079692840576, 2.461091995239258, 2.461050033569336, 2.4590845108032227, 2.4573867321014404, 2.4513943195343018, 5.496762275695801, 5.497840404510498, 2.4176268577575684, 2.4147489070892334, 2.41471791267395, 2.4147098064422607, 4.738451957702637, 2.379364013671875, 11.165138244628906, 1.7037982940673828, 1.7037937641143799, 1.7037912607192993, 64.21432495117188, 18.311147689819336, 7.024102687835693, 11.994039535522461, 6.230185508728027, 17.306949615478516, 8.194271087646484, 19.08055305480957, 6.264878273010254, 9.277922630310059, 6.347862243652344, 3.981909990310669, 3.219810724258423, 3.222810983657837, 5.501864910125732, 11.914777755737305, 6.04581356048584, 7.094889163970947, 5.475218296051025, 4.34887170791626], \u0026ldquo;Total\u0026rdquo;: [12.0, 20.0, 13.0, 26.0, 8.0, 33.0, 14.0, 6.0, 20.0, 25.0, 92.0, 4.0, 11.0, 11.0, 11.0, 6.0, 16.0, 6.0, 8.0, 7.0, 3.0, 3.0, 3.0, 3.0, 13.0, 3.0, 3.0, 4.0, 2.0, 2.0, 12.561468124389648, 3.48340106010437, 3.4835004806518555, 3.483499765396118, 3.4835267066955566, 3.482820987701416, 2.7846996784210205, 2.784468412399292, 2.783989667892456, 2.7837255001068115, 20.012794494628906, 4.815404415130615, 2.7684686183929443, 2.08599591255188, 2.085996627807617, 2.085995674133301, 2.085995674133301, 2.08599591255188, 2.085996150970459, 2.08599591255188, 2.0859954357147217, 2.085995674133301, 2.085995674133301, 2.0859951972961426, 2.085994243621826, 2.085994243621826, 2.085994005203247, 2.085994243621826, 2.0859928131103516, 2.0859899520874023, 4.935197353363037, 14.968985557556152, 4.240230083465576, 6.2036261558532715, 6.265993595123291, 6.305426120758057, 3.5412206649780273, 13.552291870117188, 92.67864227294922, 37.096343994140625, 6.408073425292969, 17.37275505065918, 4.050435543060303, 4.116152763366699, 4.11503791809082, 4.206917762756348, 7.270017623901367, 5.4320220947265625, 10.86260986328125, 29.584049224853516, 9.857355117797852, 10.17869758605957, 26.899085998535156, 33.665771484375, 18.364551544189453, 4.871782302856445, 3.3519210815429688, 3.352262020111084, 2.6860692501068115, 2.685305595397949, 2.020251750946045, 2.020251512527466, 2.0202512741088867, 2.0202512741088867, 2.020251750946045, 2.0202512741088867, 2.0202507972717285, 2.0202505588531494, 2.0202507972717285, 2.0202510356903076, 2.0202510356903076, 2.0202507972717285, 2.0202507972717285, 2.020249605178833, 2.020249843597412, 2.020249843597412, 2.020249128341675, 2.020249366760254, 2.0202488899230957, 2.0202488899230957, 2.0202465057373047, 2.0202832221984863, 2.020291566848755, 2.020346164703369, 2.02034330368042, 2.0203332901000977, 13.68616771697998, 20.763633728027344, 11.894487380981445, 3.320558786392212, 33.665771484375, 29.584049224853516, 25.578767776489258, 9.857355117797852, 10.445367813110352, 37.096343994140625, 16.800739288330078, 12.34029769897461, 9.98554801940918, 17.37275505065918, 92.67864227294922, 20.012794494628906, 6.295209884643555, 7.677928447723389, 5.4320220947265625, 18.364551544189453, 2.776247501373291, 2.7765204906463623, 2.7766637802124023, 2.7767043113708496, 2.776730537414551, 6.382038593292236, 4.930583953857422, 4.871782302856445, 3.221454620361328, 3.2231173515319824, 3.2254631519317627, 2.587334156036377, 2.5873348712921143, 2.587606191635132, 6.478824615478516, 8.413235664367676, 2.594069480895996, 4.551112651824951, 1.9544305801391602, 1.9544308185577393, 1.954431176185608, 1.954431176185608, 1.9544312953948975, 1.9544310569763184, 1.954443335533142, 1.9544322490692139, 1.9547486305236816, 1.9547251462936401, 1.9550905227661133, 1.9551061391830444, 1.9558802843093872, 1.9558809995651245, 1.9561676979064941, 1.9616857767105103, 3.974799156188965, 1.3215265274047852, 1.3215264081954956, 1.3215265274047852, 3.3879716396331787, 6.696798801422119, 2.6201000213623047, 6.192168235778809, 33.665771484375, 7.010533332824707, 18.364551544189453, 14.968985557556152, 92.67864227294922, 17.37275505065918, 37.096343994140625, 5.614768981933594, 5.616025924682617, 7.525625705718994, 20.763633728027344, 4.119144439697266, 10.445367813110352, 13.552291870117188, 13.958045959472656, 4.163941383361816, 8.261680603027344, 5.23272180557251, 5.232701301574707, 5.232457637786865, 5.232053279876709, 5.227805137634277, 11.235363960266113, 11.232739448547363, 4.475346088409424, 3.717989683151245, 3.7179436683654785, 26.899085998535156, 2.960620403289795, 2.9606170654296875, 2.960608959197998, 2.960444211959839, 2.9600272178649902, 2.9595611095428467, 6.656572341918945, 6.689100742340088, 2.955324411392212, 2.952975273132324, 2.952970504760742, 2.9529690742492676, 5.866414546966553, 2.9471471309661865, 13.958045959472656, 2.2032601833343506, 2.2032597064971924, 2.203259229660034, 92.67864227294922, 25.578767776489258, 9.53664779663086, 16.800739288330078, 8.743877410888672, 29.584049224853516, 12.34029769897461, 37.096343994140625, 10.17869758605957, 18.364551544189453, 10.86260986328125, 5.774742126464844, 4.383875846862793, 4.41689920425415, 9.98554801940918, 33.665771484375, 13.552291870117188, 20.763633728027344, 17.37275505065918, 10.445367813110352], \u0026ldquo;Category\u0026rdquo;: [\u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Default\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic1\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic2\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic3\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;, \u0026ldquo;Topic4\u0026rdquo;], \u0026ldquo;logprob\u0026rdquo;: [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -3.9885001182556152, -5.382500171661377, -5.382900238037109, -5.382999897003174, -5.3831000328063965, -5.384900093078613, -5.6508002281188965, -5.652299880981445, -5.6539998054504395, -5.655700206756592, -3.727099895477295, -5.1697998046875, -5.729400157928467, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018499851226807, -6.018599987030029, -6.018599987030029, -6.018599987030029, -5.175600051879883, -4.18720006942749, -5.38100004196167, -5.166500091552734, -5.174200057983398, -5.237500190734863, -5.647299766540527, -4.752299785614014, -3.738800048828125, -4.359399795532227, -5.378300189971924, -4.847300052642822, -5.6508002281188965, -5.651700019836426, -5.65749979019165, -5.646999835968018, -5.382400035858154, -5.530700206756592, -5.2540998458862305, -4.855599880218506, -5.311500072479248, -5.379700183868408, -5.17549991607666, -5.147799968719482, -5.388700008392334, -5.64709997177124, -5.211400032043457, -5.212600231170654, -5.479599952697754, -5.487299919128418, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847300052642822, -5.847400188446045, -5.847400188446045, -5.847400188446045, -5.847400188446045, -5.847400188446045, -5.847499847412109, -5.8480000495910645, -5.848199844360352, -5.848199844360352, -5.848199844360352, -4.005899906158447, -4.00439977645874, -4.541900157928467, -5.48360013961792, -4.316199779510498, -4.39109992980957, -4.535600185394287, -5.075900077819824, -5.093100070953369, -4.545300006866455, -4.9532999992370605, -5.117499828338623, -5.206200122833252, -4.997499942779541, -4.445899963378906, -5.056099891662598, -5.475100040435791, -5.473599910736084, -5.626800060272217, -5.480599880218506, -5.842199802398682, -5.842899799346924, -5.843599796295166, -5.843800067901611, -5.843999862670898, -5.841400146484375, -5.8414998054504395, -5.842700004577637, -5.082799911499023, -5.084700107574463, -5.092100143432617, -5.347400188446045, -5.347400188446045, -5.348100185394287, -4.436200141906738, -4.195300102233887, -5.412300109863281, -4.864200115203857, -5.715099811553955, -5.715099811553955, -5.715099811553955, -5.715099811553955, -5.715099811553955, -5.715099811553955, -5.715199947357178, -5.715199947357178, -5.716300010681152, -5.717599868774414, -5.71750020980835, -5.717599868774414, -5.720300197601318, -5.720300197601318, -5.727399826049805, -5.741700172424316, -5.07420015335083, -6.302999973297119, -6.302999973297119, -6.302999973297119, -5.460999965667725, -4.865099906921387, -5.714300155639648, -4.980299949645996, -3.6642000675201416, -5.085999965667725, -4.688700199127197, -4.847799777984619, -4.120299816131592, -4.8678998947143555, -4.622099876403809, -5.344099998474121, -5.34630012512207, -5.340099811553955, -5.080100059509277, -5.515900135040283, -5.345099925994873, -5.507299900054932, -5.556000232696533, -5.702199935913086, -4.901299953460693, -5.395400047302246, -5.395500183105469, -5.395999908447266, -5.397200107574463, -5.402100086212158, -4.640699863433838, -4.643099784851074, -5.569799900054932, -5.781099796295166, -5.781199932098389, -3.8192999362945557, -6.0493998527526855, -6.0493998527526855, -6.049499988555908, -6.050300121307373, -6.050899982452393, -6.053400039672852, -5.2459001541137695, -5.245699882507324, -6.067299842834473, -6.068399906158447, -6.06850004196167, -6.06850004196167, -5.3942999839782715, -6.083199977874756, -4.537199974060059, -6.417200088500977, -6.417200088500977, -6.417200088500977, -2.7878000736236572, -4.042500019073486, -5.000699996948242, -4.46560001373291, -5.12060022354126, -4.098899841308594, -4.84660005569458, -4.001399993896484, -5.115099906921387, -4.722400188446045, -5.101900100708008, -5.568299770355225, -5.780700206756592, -5.779799938201904, -5.244999885559082, -4.472300052642822, -5.150700092315674, -4.990699768066406, -5.249800205230713, -5.480100154876709], \u0026ldquo;loglift\u0026rdquo;: [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.3594000339508057, 1.2480000257492065, 1.247499942779541, 1.247499942779541, 1.2474000453948975, 1.2458000183105469, 1.2036000490188599, 1.2021000385284424, 1.200600028038025, 1.1991000175476074, 1.1549999713897705, 1.1368999481201172, 1.1308000087738037, 1.1247999668121338, 1.1247999668121338, 1.1247999668121338, 1.1247999668121338, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1246999502182007, 1.1065000295639038, 0.9853000044822693, 1.052899956703186, 0.886900007724762, 0.8691999912261963, 0.7996000051498413, 0.96670001745224, 0.519599974155426, -0.38940000534057617, -0.09440000355243683, 0.6425999999046326, 0.17640000581741333, 0.8288999795913696, 0.8119000196456909, 0.8064000010490417, 0.7947999835014343, 0.5123999714851379, 0.6554999947547913, 0.23909999430179596, -0.364300012588501, 0.27880001068115234, 0.1784999966621399, -0.5889999866485596, -0.7857000231742859, -0.4205999970436096, 0.6478999853134155, 1.4575999975204468, 1.4563000202178955, 1.4108999967575073, 1.403499960899353, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279999494552612, 1.3279000520706177, 1.3278000354766846, 1.327299952507019, 1.3270000219345093, 1.3270000219345093, 1.3270000219345093, 1.2561999559402466, 0.8409000039100647, 0.8605999946594238, 1.1948000192642212, 0.04580000042915344, 0.10019999742507935, 0.10109999775886536, 0.5145000219345093, 0.439300000667572, -0.28029999136924744, 0.10379999876022339, 0.24809999763965607, 0.37119999527931213, 0.026100000366568565, -1.096500039100647, -0.17399999499320984, 0.5637000203132629, 0.36660000681877136, 0.559499979019165, -0.512499988079071, 1.0152000188827515, 1.0144000053405762, 1.013700008392334, 1.0134999752044678, 1.0132999420166016, 0.18369999527931213, 0.4415999948978424, 0.45239999890327454, 1.6259000301361084, 1.6234999895095825, 1.615399956703186, 1.5805000066757202, 1.5805000066757202, 1.579699993133545, 1.573799967765808, 1.5535000562667847, 1.5130000114440918, 1.4989999532699585, 1.493299961090088, 1.493299961090088, 1.493299961090088, 1.493299961090088, 1.493299961090088, 1.493299961090088, 1.493299961090088, 1.4931999444961548, 1.4919999837875366, 1.4907000064849854, 1.4905999898910522, 1.4904999732971191, 1.4874000549316406, 1.4874000549316406, 1.4802000522613525, 1.4630000591278076, 1.424399971961975, 1.2968000173568726, 1.2968000173568726, 1.2968000173568726, 1.1972999572753906, 1.111799955368042, 1.2010999917984009, 1.0750000476837158, 0.6977999806404114, 0.8450999855995178, 0.2793999910354614, 0.3248000144958496, -0.7709000110626221, 0.155799999833107, -0.3571000099182129, 0.8090000152587891, 0.8065999746322632, 0.5200999975204468, -0.23469999432563782, 0.9470000267028809, 0.18729999661445618, -0.2353000044822693, -0.31349998712539673, 0.7498999834060669, 0.8655999898910522, 0.8281999826431274, 0.8281000256538391, 0.8276000022888184, 0.8264999985694885, 0.8224999904632568, 0.8187999725341797, 0.8166000247001648, 0.8101000189781189, 0.7842000126838684, 0.7840999960899353, 0.7670999765396118, 0.7437000274658203, 0.7437000274658203, 0.7437000274658203, 0.742900013923645, 0.7423999905586243, 0.7401000261306763, 0.7369999885559082, 0.7324000000953674, 0.7276999950408936, 0.7272999882698059, 0.7272999882698059, 0.7272999882698059, 0.7149999737739563, 0.7145000100135803, 0.7052000164985657, 0.6714000105857849, 0.6714000105857849, 0.6714000105857849, 0.5616000294685364, 0.5942000150680542, 0.6226999759674072, 0.5914999842643738, 0.5895000100135803, 0.39239999651908875, 0.51910001039505, 0.2635999917984009, 0.4431999921798706, 0.24570000171661377, 0.3912999927997589, 0.5568000078201294, 0.6198999881744385, 0.6133000254631042, 0.33239999413490295, -0.11020000278949738, 0.12129999697208405, -0.1453000009059906, -0.22619999945163727, 0.05220000073313713]}, \u0026ldquo;token.table\u0026rdquo;: {\u0026ldquo;Topic\u0026rdquo;: [2, 2, 3, 3, 1, 4, 3, 4, 2, 1, 2, 3, 4, 3, 3, 1, 4, 1, 2, 3, 4, 1, 1, 2, 3, 4, 1, 4, 3, 4, 1, 4, 1, 3, 1, 1, 4, 2, 1, 3, 4, 1, 2, 4, 1, 2, 4, 4, 1, 1, 1, 3, 4, 2, 1, 1, 4, 1, 3, 2, 1, 3, 3, 4, 1, 1, 2, 4, 1, 2, 3, 4, 1, 4, 3, 2, 4, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 4, 1, 1, 4, 2, 3, 1, 2, 3, 4, 2, 1, 2, 4, 1, 3, 2, 4, 2, 1, 3, 4, 3, 3, 4, 2, 1, 1, 2, 4, 1, 2, 4, 2, 1, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 3, 1, 2, 3, 4, 3, 3, 4, 3, 4, 1, 2, 4, 2, 4, 1, 4, 1, 2, 4, 1, 2, 3, 4, 1, 1, 2, 3, 4, 2, 3, 3, 4, 2, 1, 2, 3, 4, 2, 4, 2, 3, 4, 3, 1, 1, 1, 3, 4, 1, 3, 2, 2, 4, 1, 4, 1, 3, 4, 2, 4, 3, 1, 3, 2, 1, 2, 1, 2, 4, 1, 1, 1, 4, 3, 1, 3, 4, 3, 4, 3, 4, 4, 2, 1, 2, 4, 2, 2, 2, 2, 3, 4, 1, 3, 3, 4, 1, 2, 3, 2, 4, 2, 4, 1, 2, 1, 2, 4, 1, 2, 3, 2, 1, 3, 4, 2, 4, 1, 2, 4, 2, 4, 1, 2, 3, 1, 2, 4, 3, 1, 2, 3, 4, 3, 4, 1, 4, 3, 4, 4, 3, 2, 3, 4, 2, 1, 2, 4, 3, 4, 2, 3, 1, 2, 4, 1, 3, 4], \u0026ldquo;Freq\u0026rdquo;: [0.4949880540370941, 0.49498799443244934, 0.5112787485122681, 0.5112785696983337, 0.9587746262550354, 0.6772841215133667, 0.5116578340530396, 0.6772844195365906, 0.494987815618515, 0.11436574161052704, 0.11436574161052704, 0.11436574161052704, 0.6861944198608398, 0.7729964256286621, 0.5115808844566345, 0.41265374422073364, 0.5502049922943115, 0.5522805452346802, 0.3681870102882385, 0.18409350514411926, 0.9564242959022522, 0.8613707423210144, 0.958774745464325, 0.14932507276535034, 0.447975218296051, 0.2986501455307007, 0.7075088024139404, 0.23583625257015228, 0.48553770780563354, 0.48553770780563354, 0.5647770166397095, 0.28238850831985474, 0.958774745464325, 0.7567007541656494, 0.9587773680686951, 0.08902547508478165, 0.8902547955513, 0.4949881136417389, 0.07164326310157776, 0.14328652620315552, 0.7880759239196777, 0.46815943717956543, 0.15605314075946808, 0.31210628151893616, 0.16814512014389038, 0.5044353604316711, 0.33629024028778076, 0.8068976402282715, 0.9587754011154175, 0.9587746262550354, 0.21972648799419403, 0.6591794490814209, 0.6757758855819702, 0.49498793482780457, 0.7224210500717163, 0.08900468051433563, 0.8900468349456787, 0.9587754011154175, 0.509765625, 0.49498799443244934, 0.49377405643463135, 0.24688702821731567, 0.7709893584251404, 0.9555293917655945, 0.9587743282318115, 0.1048586517572403, 0.1048586517572403, 0.7340105175971985, 0.16184958815574646, 0.06473983824253082, 0.0755298063158989, 0.6905582547187805, 0.149496927857399, 0.7474846243858337, 0.7729151248931885, 0.720396876335144, 0.360198438167572, 0.11881504207849503, 0.20792631804943085, 0.32674136757850647, 0.3564451336860657, 0.5116578340530396, 0.958774745464325, 0.4949653744697571, 0.09573622047901154, 0.2872086465358734, 0.19147244095802307, 0.38294488191604614, 0.9077461361885071, 0.86122727394104, 0.7184616327285767, 0.677282989025116, 0.4949885308742523, 0.5112035870552063, 0.1633581966161728, 0.10890546441078186, 0.21781092882156372, 0.4900745749473572, 0.49497807025909424, 0.41052737832069397, 0.41052737832069397, 0.20526368916034698, 0.15434898436069489, 0.7717449069023132, 0.15022747218608856, 0.7511373162269592, 0.7445824146270752, 0.44272953271865845, 0.14757651090621948, 0.44272953271865845, 0.5116578340530396, 0.35620343685150146, 0.5343051552772522, 0.49498841166496277, 0.9587748646736145, 0.30434128642082214, 0.30434128642082214, 0.30434128642082214, 0.05952119082212448, 0.23808476328849792, 0.7142542600631714, 0.49498793482780457, 0.9587746262550354, 0.6755348443984985, 0.1690099984407425, 0.20281198620796204, 0.03380199894309044, 0.5746339559555054, 0.15668974816799164, 0.3133794963359833, 0.15668974816799164, 0.4700692296028137, 0.2156546711921692, 0.1617410033941269, 0.1078273355960846, 0.5121798515319824, 0.2878069579601288, 0.23024557530879974, 0.1726841777563095, 0.2878069579601288, 0.23772066831588745, 0.8320223093032837, 0.1302434653043747, 0.2604869306087494, 0.1302434653043747, 0.3907303810119629, 0.5115747451782227, 0.5116546154022217, 0.8937855958938599, 0.5114852786064148, 0.806887686252594, 0.07818984985351562, 0.23456954956054688, 0.7037086486816406, 0.720288872718811, 0.3601444363594055, 0.8105045557022095, 0.20262613892555237, 0.0810353234410286, 0.2431059628725052, 0.6482825875282288, 0.7183934450149536, 0.4949880540370941, 0.9307759404182434, 0.9556477665901184, 0.955302357673645, 0.2657586336135864, 0.2657586336135864, 0.2657586336135864, 0.2657586336135864, 0.6023082733154297, 0.30115413665771484, 0.7547551393508911, 0.2515850365161896, 0.49498793482780457, 0.09632225334644318, 0.4334501326084137, 0.14448338747024536, 0.3371278941631317, 0.22810864448547363, 0.6843259334564209, 0.6575982570648193, 0.07306647300720215, 0.21919941902160645, 0.772996187210083, 0.958774983882904, 0.8612028956413269, 0.2401570826768875, 0.2401570826768875, 0.480314165353775, 0.8306674957275391, 0.20766687393188477, 0.494987815618515, 0.7202783226966858, 0.3601391613483429, 0.148703932762146, 0.8550476431846619, 0.4757806956768036, 0.1585935652256012, 0.3171871304512024, 0.8949180841445923, 0.6755743026733398, 0.5116579532623291, 0.7182102799415588, 0.5116578936576843, 0.494988352060318, 0.718269944190979, 0.4949878752231598, 0.4056314527988434, 0.4056314527988434, 0.4056314527988434, 0.958774745464325, 0.958775520324707, 0.9587745666503906, 0.907745897769928, 0.5116575360298157, 0.2947331964969635, 0.09824439883232117, 0.589466392993927, 0.3561237156391144, 0.5341855883598328, 0.5903236865997314, 0.2951618432998657, 0.6756694912910461, 0.49496468901634216, 0.9587754011154175, 0.8950091600418091, 0.9077457189559937, 0.4949880540370941, 0.49496784806251526, 0.4949882924556732, 0.1731678992509842, 0.1731678992509842, 0.6926715970039368, 0.8612027168273926, 0.5114811658859253, 0.7567006349563599, 0.6767446398735046, 0.7994885444641113, 0.14990410208702087, 0.04996803402900696, 0.7203260660171509, 0.36016303300857544, 0.4949882924556732, 0.6755340695381165, 0.95877605676651, 0.49498847126960754, 0.6383664608001709, 0.15959161520004272, 0.15959161520004272, 0.48589062690734863, 0.48589062690734863, 0.9312563538551331, 0.7447941899299622, 0.27617672085762024, 0.09205890446901321, 0.5523534417152405, 0.7202715277671814, 0.3601357638835907, 0.4860222637653351, 0.24301113188266754, 0.9683259725570679, 0.4949800968170166, 0.9555739164352417, 0.6680479645729065, 0.06680479645729065, 0.20041438937187195, 0.8611962199211121, 0.4949885308742523, 0.6786223649978638, 0.7567006349563599, 0.10014472901821136, 0.3004341721534729, 0.10014472901821136, 0.6008683443069458, 0.4844829738140106, 0.4844829738140106, 0.22640317678451538, 0.6792095303535461, 0.5116577744483948, 0.9555256962776184, 0.6755366921424866, 0.9300990104675293, 0.4949880540370941, 0.17046187818050385, 0.8523093461990356, 0.4949890971183777, 0.31770187616348267, 0.31770187616348267, 0.31770187616348267, 0.42792749404907227, 0.5705699920654297, 0.38166481256484985, 0.38166481256484985, 0.4754074513912201, 0.23770372569561005, 0.23770372569561005, 0.644784152507782, 0.1611960381269455, 0.1611960381269455], \u0026ldquo;Term\u0026rdquo;: [\u0026quot;-citizens\u0026rdquo;, \u0026ldquo;-found\u0026rdquo;, \u0026ldquo;-secretary\u0026rdquo;, \u0026ldquo;1,000\u0026rdquo;, \u0026ldquo;13,979\u0026rdquo;, \u0026ldquo;15,000\u0026rdquo;, \u0026ldquo;26-year\u0026rdquo;, \u0026ldquo;3,000\u0026rdquo;, \u0026ldquo;60000\u0026rdquo;, \u0026ldquo;action\u0026rdquo;, \u0026ldquo;action\u0026rdquo;, \u0026ldquo;action\u0026rdquo;, \u0026ldquo;action\u0026rdquo;, \u0026ldquo;advisor\u0026rdquo;, \u0026ldquo;afraid\u0026rdquo;, \u0026ldquo;already\u0026rdquo;, \u0026ldquo;already\u0026rdquo;, \u0026ldquo;always\u0026rdquo;, \u0026ldquo;always\u0026rdquo;, \u0026ldquo;always\u0026rdquo;, \u0026ldquo;announce\u0026rdquo;, \u0026ldquo;anyone\u0026rdquo;, \u0026ldquo;approve\u0026rdquo;, \u0026ldquo;arrest\u0026rdquo;, \u0026ldquo;arrest\u0026rdquo;, \u0026ldquo;arrest\u0026rdquo;, \u0026ldquo;arrive\u0026rdquo;, \u0026ldquo;arrive\u0026rdquo;, \u0026ldquo;article\u0026rdquo;, \u0026ldquo;article\u0026rdquo;, \u0026ldquo;attack\u0026rdquo;, \u0026ldquo;attack\u0026rdquo;, \u0026ldquo;average\u0026rdquo;, \u0026ldquo;baianos\u0026rdquo;, \u0026ldquo;become\u0026rdquo;, \u0026ldquo;billion\u0026rdquo;, \u0026ldquo;billion\u0026rdquo;, \u0026ldquo;birthday\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;bolsonaro\u0026rdquo;, \u0026ldquo;brasilia\u0026rdquo;, \u0026ldquo;brasilia\u0026rdquo;, \u0026ldquo;brasilia\u0026rdquo;, \u0026ldquo;brazil\u0026rdquo;, \u0026ldquo;brazil\u0026rdquo;, \u0026ldquo;brazil\u0026rdquo;, \u0026ldquo;campaign\u0026rdquo;, \u0026ldquo;camuflagem\u0026rdquo;, \u0026ldquo;capital\u0026rdquo;, \u0026ldquo;case\u0026rdquo;, \u0026ldquo;case\u0026rdquo;, \u0026ldquo;check\u0026rdquo;, \u0026ldquo;child\u0026rdquo;, \u0026ldquo;collapse\u0026rdquo;, \u0026ldquo;combat\u0026rdquo;, \u0026ldquo;combat\u0026rdquo;, \u0026ldquo;coming\u0026rdquo;, \u0026ldquo;comparison\u0026rdquo;, \u0026ldquo;confrontation\u0026rdquo;, \u0026ldquo;congress\u0026rdquo;, \u0026ldquo;congress\u0026rdquo;, \u0026ldquo;consider\u0026rdquo;, \u0026ldquo;contract\u0026rdquo;, \u0026ldquo;control\u0026rdquo;, \u0026ldquo;corona\u0026rdquo;, \u0026ldquo;corona\u0026rdquo;, \u0026ldquo;corona\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;coronavirus\u0026rdquo;, \u0026ldquo;country\u0026rdquo;, \u0026ldquo;country\u0026rdquo;, \u0026ldquo;courage\u0026rdquo;, \u0026ldquo;covid\u0026rdquo;, \u0026ldquo;covid\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;covid-19\u0026rdquo;, \u0026ldquo;covidan\u0026rdquo;, \u0026ldquo;criticize\u0026rdquo;, \u0026ldquo;dealer\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;death\u0026rdquo;, \u0026ldquo;decide\u0026rdquo;, \u0026ldquo;defend\u0026rdquo;, \u0026ldquo;defense\u0026rdquo;, \u0026ldquo;delivery\u0026rdquo;, \u0026ldquo;demand\u0026rdquo;, \u0026ldquo;demonstrate\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;demonstration\u0026rdquo;, \u0026ldquo;destoa\u0026rdquo;, \u0026ldquo;distance\u0026rdquo;, \u0026ldquo;distance\u0026rdquo;, \u0026ldquo;distance\u0026rdquo;, \u0026ldquo;doctor\u0026rdquo;, \u0026ldquo;doctor\u0026rdquo;, \u0026ldquo;doria\u0026rdquo;, \u0026ldquo;doria\u0026rdquo;, \u0026ldquo;elderly\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;emergency\u0026rdquo;, \u0026ldquo;energy\u0026rdquo;, \u0026ldquo;epidemic\u0026rdquo;, \u0026ldquo;epidemic\u0026rdquo;, \u0026ldquo;everything\u0026rdquo;, \u0026ldquo;expenditure\u0026rdquo;, \u0026ldquo;federal\u0026rdquo;, \u0026ldquo;federal\u0026rdquo;, \u0026ldquo;federal\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;fight\u0026rdquo;, \u0026ldquo;flag\u0026rdquo;, \u0026ldquo;flexibility\u0026rdquo;, \u0026ldquo;globo\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;government\u0026rdquo;, \u0026ldquo;governor\u0026rdquo;, \u0026ldquo;governor\u0026rdquo;, \u0026ldquo;governor\u0026rdquo;, \u0026ldquo;governor\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;health\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;hospital\u0026rdquo;, \u0026ldquo;hydroxychloroquine\u0026rdquo;, \u0026ldquo;hydroxychloroquine\u0026rdquo;, \u0026ldquo;infect\u0026rdquo;, \u0026ldquo;infect\u0026rdquo;, \u0026ldquo;infect\u0026rdquo;, \u0026ldquo;infect\u0026rdquo;, \u0026ldquo;inflate\u0026rdquo;, \u0026ldquo;lastly\u0026rdquo;, \u0026ldquo;little\u0026rdquo;, \u0026ldquo;malaysia\u0026rdquo;, \u0026ldquo;march\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;measure\u0026rdquo;, \u0026ldquo;medical\u0026rdquo;, \u0026ldquo;medical\u0026rdquo;, \u0026ldquo;medium\u0026rdquo;, \u0026ldquo;medium\u0026rdquo;, \u0026ldquo;minister\u0026rdquo;, \u0026ldquo;minister\u0026rdquo;, \u0026ldquo;minister\u0026rdquo;, \u0026ldquo;money\u0026rdquo;, \u0026ldquo;natural\u0026rdquo;, \u0026ldquo;negative\u0026rdquo;, \u0026ldquo;nelson\u0026rdquo;, \u0026ldquo;network\u0026rdquo;, \u0026ldquo;never\u0026rdquo;, \u0026ldquo;never\u0026rdquo;, \u0026ldquo;never\u0026rdquo;, \u0026ldquo;never\u0026rdquo;, \u0026ldquo;number\u0026rdquo;, \u0026ldquo;number\u0026rdquo;, \u0026ldquo;office\u0026rdquo;, \u0026ldquo;office\u0026rdquo;, \u0026ldquo;overcrowd\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;pandemic\u0026rdquo;, \u0026ldquo;paulo\u0026rdquo;, \u0026ldquo;paulo\u0026rdquo;, \u0026ldquo;people\u0026rdquo;, \u0026ldquo;people\u0026rdquo;, \u0026ldquo;people\u0026rdquo;, \u0026ldquo;phares\u0026rdquo;, \u0026ldquo;phone\u0026rdquo;, \u0026ldquo;pistol\u0026rdquo;, \u0026ldquo;place\u0026rdquo;, \u0026ldquo;place\u0026rdquo;, \u0026ldquo;place\u0026rdquo;, \u0026ldquo;positive\u0026rdquo;, \u0026ldquo;positive\u0026rdquo;, \u0026ldquo;preach\u0026rdquo;, \u0026ldquo;presence\u0026rdquo;, \u0026ldquo;presence\u0026rdquo;, \u0026ldquo;president\u0026rdquo;, \u0026ldquo;president\u0026rdquo;, \u0026ldquo;press\u0026rdquo;, \u0026ldquo;press\u0026rdquo;, \u0026ldquo;press\u0026rdquo;, \u0026ldquo;prevent\u0026rdquo;, \u0026ldquo;prevention\u0026rdquo;, \u0026ldquo;price\u0026rdquo;, \u0026ldquo;profile\u0026rdquo;, \u0026ldquo;protect\u0026rdquo;, \u0026ldquo;protection\u0026rdquo;, \u0026ldquo;provide\u0026rdquo;, \u0026ldquo;prudent\u0026rdquo;, \u0026ldquo;quarantine\u0026rdquo;, \u0026ldquo;quarantine\u0026rdquo;, \u0026ldquo;quarantine\u0026rdquo;, \u0026ldquo;question\u0026rdquo;, \u0026ldquo;recently\u0026rdquo;, \u0026ldquo;recife\u0026rdquo;, \u0026ldquo;record\u0026rdquo;, \u0026ldquo;relative\u0026rdquo;, \u0026ldquo;release\u0026rdquo;, \u0026ldquo;release\u0026rdquo;, \u0026ldquo;release\u0026rdquo;, \u0026ldquo;report\u0026rdquo;, \u0026ldquo;report\u0026rdquo;, \u0026ldquo;respirator\u0026rdquo;, \u0026ldquo;respirator\u0026rdquo;, \u0026ldquo;result\u0026rdquo;, \u0026ldquo;revenue\u0026rdquo;, \u0026ldquo;sauer\u0026rdquo;, \u0026ldquo;science\u0026rdquo;, \u0026ldquo;secret\u0026rdquo;, \u0026ldquo;security\u0026rdquo;, \u0026ldquo;seize\u0026rdquo;, \u0026ldquo;serious\u0026rdquo;, \u0026ldquo;share\u0026rdquo;, \u0026ldquo;share\u0026rdquo;, \u0026ldquo;share\u0026rdquo;, \u0026ldquo;shooting\u0026rdquo;, \u0026ldquo;since\u0026rdquo;, \u0026ldquo;singer\u0026rdquo;, \u0026ldquo;situation\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;social\u0026rdquo;, \u0026ldquo;speech\u0026rdquo;, \u0026ldquo;speech\u0026rdquo;, \u0026ldquo;spend\u0026rdquo;, \u0026ldquo;spoke\u0026rdquo;, \u0026ldquo;stadium\u0026rdquo;, \u0026ldquo;start\u0026rdquo;, \u0026ldquo;state\u0026rdquo;, \u0026ldquo;state\u0026rdquo;, \u0026ldquo;state\u0026rdquo;, \u0026ldquo;still\u0026rdquo;, \u0026ldquo;still\u0026rdquo;, \u0026ldquo;street\u0026rdquo;, \u0026ldquo;study\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;support\u0026rdquo;, \u0026ldquo;suspicion\u0026rdquo;, \u0026ldquo;suspicion\u0026rdquo;, \u0026ldquo;system\u0026rdquo;, \u0026ldquo;system\u0026rdquo;, \u0026ldquo;take\u0026rdquo;, \u0026ldquo;technology\u0026rdquo;, \u0026ldquo;teich\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;test\u0026rdquo;, \u0026ldquo;thing\u0026rdquo;, \u0026ldquo;think\u0026rdquo;, \u0026ldquo;thousand\u0026rdquo;, \u0026ldquo;timel\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;today\u0026rdquo;, \u0026ldquo;treatment\u0026rdquo;, \u0026ldquo;treatment\u0026rdquo;, \u0026ldquo;trump\u0026rdquo;, \u0026ldquo;trump\u0026rdquo;, \u0026ldquo;try\u0026rdquo;, \u0026ldquo;video\u0026rdquo;, \u0026ldquo;videoconference\u0026rdquo;, \u0026ldquo;vocid-19\u0026rdquo;, \u0026ldquo;want\u0026rdquo;, \u0026ldquo;watch\u0026rdquo;, \u0026ldquo;watch\u0026rdquo;, \u0026ldquo;website\u0026rdquo;, \u0026ldquo;without\u0026rdquo;, \u0026ldquo;without\u0026rdquo;, \u0026ldquo;without\u0026rdquo;, \u0026ldquo;witzel\u0026rdquo;, \u0026ldquo;witzel\u0026rdquo;, \u0026ldquo;works\u0026rdquo;, \u0026ldquo;works\u0026rdquo;, \u0026ldquo;world\u0026rdquo;, \u0026ldquo;world\u0026rdquo;, \u0026ldquo;world\u0026rdquo;, \u0026ldquo;would\u0026rdquo;, \u0026ldquo;would\u0026rdquo;, \u0026ldquo;would\u0026rdquo;]}, \u0026ldquo;R\u0026rdquo;: 30, \u0026ldquo;lambda.step\u0026rdquo;: 0.01, \u0026ldquo;plot.opts\u0026rdquo;: {\u0026ldquo;xlab\u0026rdquo;: \u0026ldquo;PC1\u0026rdquo;, \u0026ldquo;ylab\u0026rdquo;: \u0026ldquo;PC2\u0026rdquo;}, \u0026ldquo;topic.order\u0026rdquo;: [1, 2, 3, 4]};\nfunction LDAvis_load_lib(url, callback){ var s = document.createElement(\u0026lsquo;script\u0026rsquo;); s.src = url; s.async = true; s.onreadystatechange = s.onload = callback; s.onerror = function(){console.warn(\u0026ldquo;failed to load library \u0026quot; + url);}; document.getElementsByTagName(\u0026ldquo;head\u0026rdquo;)[0].appendChild(s); }\nif(typeof(LDAvis) !== \u0026ldquo;undefined\u0026rdquo;){ // already loaded: just create the visualization !function(LDAvis){ new LDAvis(\u0026quot;#\u0026rdquo; + \u0026ldquo;ldavis_el786423234483639764619859254\u0026rdquo;, ldavis_el786423234483639764619859254_data); }(LDAvis); }else if(typeof define === \u0026ldquo;function\u0026rdquo; \u0026amp;\u0026amp; define.amd){ // require.js is available: use it to load d3/LDAvis require.config({paths: {d3: \u0026ldquo;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\u0026quot;}}); require([\u0026ldquo;d3\u0026rdquo;], function(d3){ window.d3 = d3; LDAvis_load_lib(\u0026ldquo;https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\u0026quot;, function(){ new LDAvis(\u0026quot;#\u0026rdquo; + \u0026ldquo;ldavis_el786423234483639764619859254\u0026rdquo;, ldavis_el786423234483639764619859254_data); }); }); }else{ // require.js not available: dynamically load d3 \u0026amp; LDAvis LDAvis_load_lib(\u0026ldquo;https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\u0026quot;, function(){ LDAvis_load_lib(\u0026ldquo;https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\u0026quot;, function(){ new LDAvis(\u0026quot;#\u0026rdquo; + \u0026ldquo;ldavis_el786423234483639764619859254\u0026rdquo;, ldavis_el786423234483639764619859254_data); }) }); } \nSentiment analysis from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\ranalyser = SentimentIntensityAnalyzer()\rdef sentiment_analyzer_scores(sentence):\rscore = analyser.polarity_scores(sentence)\rscore = score['compound']\rreturn score\r covid_subsample[\u0026quot;Sentiment\u0026quot;] = covid_subsample[\u0026quot;Tweets_en\u0026quot;].apply(sentiment_analyzer_scores)\r C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame.\rTry using .loc[row_indexer,col_indexer] = value instead\rSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\r\u0026quot;\u0026quot;\u0026quot;Entry point for launching an IPython kernel.\r idx = pd.date_range('01-30-2020', '05-07-2020')\rcovid_subsample.index = pd.DatetimeIndex(covid_subsample.Date)\rcovid_subsample = covid_subsample.reindex(idx, fill_value=0)\rsent = pd.Series(data=covid_subsample['Sentiment'].values, index=covid_subsample['Date'])\rsent.plot(figsize=(16,4), label=\u0026quot;Compound sentiment\u0026quot;, legend=True,drawstyle=\u0026quot;steps\u0026quot;)\r \u0026lt;matplotlib.axes._subplots.AxesSubplot at 0x1ed00363408\u0026gt;\r  ","date":1590537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590537600,"objectID":"acfd03a8668972bc57d9eccdc9f28ad3","permalink":"/project/twitter/","publishdate":"2020-05-27T00:00:00Z","relpermalink":"/project/twitter/","section":"project","summary":"Illustration of scraping tweets with tweepy and translating them via DeepL's API.","tags":["Python"],"title":"Twitter and DeepL","type":"project"},{"authors":null,"categories":null,"content":"\rStochastic solution\rThis markdown is based on work for the paper “The Birth of a Multinational: Innovation and Foreign Acquisitions” with Jim Goldman, Maria Guadalupe and Veronica Rapppoport. The problem is to find the optimal timing and amount of investment into a new technology, as well as when to become a multinational, i.e. enter a new market facing higher demand. Expertise which forms together with technology the level of productivity is stochastic in this setting following a Brownian motion. This problem is a combination of a optimal stochastic impulse control problem (when and how much to invest) and an optimal switching problem (when to enter the new market). For those problems a closed-form solution usually doesn’t exist. Hence, I thought it might be of general interest to show how to tackle such a problem numerically.\nMethod\rThe numerical solution method follows the outline of the “Forward simulation and backward updating” (FSBU) algorithm described in “A Backward Simulation Method for Stochastic Optimal Control Problems” by Shen \u0026amp; Weng (2019).\nInitiation:\nSet \\(V_{d,T}(a,h) = \\pi_{M,T}(a,h)\\). Meaning that after some finite time T every domestic firm is eventually a multinational firm. So we have to back out, how the firm got there optimally. Given that the value is time-dependent, so will the policy functions (likely to converge to some constant decision rule after some time). For \\(t= T-1, T-2,...\\) do the following two steps:\n\rForward Simulation:\n\rControl randomization: Generate random samples (N: amount of Monte Carlo simulations) of actions (invest \\(a\\) (arbitrary), open foreign affiliation \\(f\\) (once for \\(t \\in[1,T]\\))) up to time t:\r\\[a^n_{1:t} = (a_1^n,...,a_t^n), n=1,2,...,N, \\]\r\\[ f^n_{1:t} = (f_1^n,...,f_t^n), n=1,2,...,N, \\]\rwith \\(\\sum_{i=1}^{t}f_i^n=1\\) and \\(f_i \\in (0,1)\\) for all \\(n = 1,2,...,N\\).\n\rSimulation of state process: Simulate random innovations to the process of experience:\r\\[\\epsilon^n_{1:t} = (\\epsilon_1^n,...,\\epsilon_t^n), n=1,2,...,N,\\]\rThis gives us a sample of the state process\r\\[X^n_{1:t} = (X_1^n,...,X_t^n), n=1,2,...,N,\\]\rwhere each state \\(X^n_{t}\\) is a function of its prior state, any action/inaction and innovations to experience: \\(X^n_{t}= s(X^n_{t-1},a^n_{t-1},f^n_{t-1},\\epsilon_t^n)\\).\n\r\rBackward Updating:\n\rNon-parametric regression: Now using the simulated states construct value as dependent variable by just assigning the reward (profit) function to the state:\r\\[Y^n_{t+1} = V_{t+1}(X_{t+1}^n), n=1,2,...,N.\\]\rFurther, as independent variable, construct sample of post-action state value (function K captures loss in experience, increase in a)\r\\[ X^n_{t+} = K(X_{t}^n,a_t^n,f_t^n), n=1,2,...,N.\\]\rNow regressing \\(Y^n_{t+1}\\) on \\(X^n_{t+}\\) non-parametrically gives us an estimate of the continuation value \\(C_t\\).\rOptimization: Finally, in order to find the optimal policy functions (i.e. when and how much to invest and when to enter) we optimize the following problem recursively for all t (hence, time dependent policies).\r\\[V_t(a,h) = \\sup_{a\u0026#39;,f}[\\pi_t(X_t,a\u0026#39;,f)+\\beta C_t(K(X_{t},a\u0026#39;,f))]\\]\r\r\r\rSet parameters of model\rM_d = 1 # domestic revenue stream\rM_m = 1.25 # revenue stream multinational\rp_a = 0.2 # cost for innovating\rF_M = 2 # cost for opening foreign affiliation\rr = 0.02 # two percent risk free rate per period\rkappa = 0.1 # drop in experience due to new technology\rmu = 0.015 # learning rate\rsigma = 0.1 # standard deviation of brownian motion\ra0 = 0 # initial technology level\rh0 = 0.5 # initial experience level\r\rSet parameters for simulation\rN = 1000 # number of Monte Carlo simulations T = 10 # points in time\rB = 0 # burn in periods\r\rInitialize objects to save simulations\r# actions\rinvestment = matrix(0,N,T+B)\rentry = matrix(0,N,T+B)\r# value of firm\rvalue = matrix(0,N,T+B)\r# states\rstate_space = array(0,dim=c(3,N,T+B))\r\rForward Simulation\rThe following block implements the forward Monte carlo Simulation for N firms. First, we draw random investment and entry strategies for each firm at each point in time. While a firm can invest at any point in time, any amount, it can only once open a foreign affiliation and become a multinational.\n# Control randomization\rfor (i in 1:N){\rset.seed(i*123)\r# here investment replaces old technology level if higher\rinvestment[i,] = pmax(0,rnorm(T+B, mean = 0, sd = 2))\rset.seed(i*1234)\rentry[i,sample(1:(T+B),1)] = 1 # maybe use heuristik, so less Monte Carlo simulations are needed, e.g. entry if ((T-t)*productivity*(M_m-M_d)\u0026gt;F_M)\r}\rNext, based on our control randomization, we calculate the resulting states starting with out initial values for the technology level and expertise. The states evolve according to the actions each firm takes and the stochastic learning process for expertise. The state_space is an object which saves the value of each state (technology level, expertise and domestic/multinational dummy) for each firm at each point in time.\n# Calculate state process based on actions and shocks. #States: a, h, shock (forming productivity), foreign_dummy\rset.seed(2)\rstate_space[1,,1] = pmax(0,rnorm(N, mean = 0.5, sd = 1)) # initial technology level for all simulations set.seed(3)\rstate_space[2,,1] = pmax(0,rnorm(N, mean = 0.5, sd = 1)) # initial experience level for all simulations\r#Note! if we want to start from an initial distribution #we might need to \u0026quot;burn\u0026quot; some simulations at the start\rstate_space[3,,1] = 0 # initially domestic firm\r# initialize object to save simulations of sde\rsde = array(0,dim=c(N))\rdrift = expression(mu * x)\rdiffusion = expression(sqrt(2) * sigma * x)\rfor (t in 2:(T+B)){\rstate_space[1,,t] = state_space[1,,t-1] + investment[,t-1]\r# for experience we need to account for stochastic drift\rfor (n in 1:N){\r#set.seed(n*12345)\rif (investment[n,t-1]\u0026gt;0){\rx0 = state_space[2,n,t-1] * (1-kappa)\r}\relse {\rx0 = state_space[2,n,t-1]\r}\raux = snssde1d(N=2,drift = drift, diffusion = diffusion, x0 = x0,M=1, type=\u0026quot;ito\u0026quot;,Dt=1)\rsde[n] = aux$X[2]\r# use heuristik to determine entry\r#if((T-t)*(state_space[2,n,t-1]*state_space[1,n,t-1])^0.5*(M_m-M_d)\u0026gt;(F_M/2) \u0026amp; state_space[3,n,t-1]==0){\r# entry[n,t-1] = 1\r#}\r#else{\r# entry[n,t-1] = 0\r#}\r}\rstate_space[2,,t] = sde\rstate_space[3,,t] = state_space[3,,t-1] + entry[,t-1] }\r# Delete burn in periods\rif (B\u0026gt;0){\rstate_space_b = state_space[,,(B+1):(T+B)]\rstate_space_b[1,,] = state_space_b[1,,]/quantile(state_space_b[1,,1],0.99)\rstate_space_b[2,,] = state_space_b[2,,]/quantile(state_space_b[2,,1],0.99)\rstate_space = NULL\rstate_space = state_space_b\r}\rNow that we have simulated the state space, we can calculate the reward (here the revenue) for each firm and get the (idiosyncratic) value function for each point in time recursively. This is what we want to maximize later, taking the cost of each action into account.\n# reward function = revenue (cost trade-off in optimization)\rrevenue_function = function(state_space){\ra = state_space[1,,]\rh = state_space[2,,]\rf = state_space[3,,]\rrevenue = (1-f) * a^0.5 * h^0.5 * M_d + f * a^0.5 * h^0.5 * M_m #- as.numeric(investment\u0026gt;0)*(investment+a)*p_a - entry*F_M\rreturn(revenue)\r}\rrevenue = revenue_function (state_space)\r# calculate net present value of revenue over time\rrevenue_value_function = function(revenue){\rvalue_t = array(0,dim=dim(revenue))\rvalue_t[,ncol(revenue)] = revenue[,ncol(revenue)]\rfor (t in (ncol(revenue)-1):1){\rvalue_t[,t] = revenue[,t] + exp(-r)*value_t[,t+1]\r}\rreturn(value_t)\r}\rvalue_revenue = revenue_value_function(revenue)\rFinally we plot some simulated paths of the state space and the corresponding revenue.\n# Plot some simulated paths\rn=1000\rpar(mfrow=c(2,2),mar=c(4,4,1,1))\rexp_p = ts(t(state_space[2,1:n,]))\rts.plot(exp_p,ylab = \u0026quot;Experience\u0026quot;,gpars= list(col=plasma(n)))\rinv_p = ts(t(state_space[1,1:n,]))\rts.plot(inv_p,ylab = \u0026quot;Investment\u0026quot;,gpars= list(col=plasma(n)))\rentry_p = ts(t(state_space[3,1:n,]))\rts.plot(entry_p,ylab = \u0026quot;Foreign affiliation\u0026quot;,gpars= list(col=plasma(n)))\rrevenue_p = ts(t(revenue[1:n,]))\rts.plot(revenue_p,ylab = \u0026quot;Revenue\u0026quot;,gpars= list(col=plasma(n)))\r\rBackward Updating and Optimization\rUp to this point we have simulated many potential paths for firms’ values depending on randomized actions. From that simulated data we aim to back out the optimal actions at any given state for each point in time. This will be done by backward updating which gives us an estimate of the continuation value and optimization, which chooses those actions maximizing the continuation value. This procedure is done in two steps: In a first step we non-parametrically regress (here using Gradient Boosting as this is extremely fast) the simulated (path-specific!) values on the simulated post-action states to get a mapping from post-action state to continuation value. The mapping from state to post-action state is deterministic and depends on the respective actions. Using those two mappings, one deterministic and the other one estimated, we can run an optimization scheme choosing those actions, which lead us to the corresponding post-action state which in turn gives us the highest continuation value in expecttation in the next period. We do this for any given “pre-action” state. The whole procedure is done backwards, for each point in time.\n# get post action state values - states as vectors for non-parametric estimation\rpost_action_vector = function(current_state,investment,entry){\rpost_action = array(0,dim=c(3,N))\ra = current_state[1,]\rh = current_state[2,]\rf = current_state[3,]\rpost_action[1,] = a + investment post_action[2,] = h * (1-as.numeric(investment\u0026gt;0)) + h * (1-kappa) * as.numeric(investment\u0026gt;0)\rpost_action[3,] = f + entry\rreturn(post_action)\r}\r# get post action state values - states as scalars for optimization\rpost_action = function(a,h,f,investment,entry){\rpost_action = array(0,dim=c(3))\rpost_action[1] = a + investment post_action[2] = h * (1-as.numeric(investment\u0026gt;0)) + h * (1-kappa) * as.numeric(investment\u0026gt;0)\rpost_action[3] = f + entry\rreturn(post_action) }\r# value_function (continuous optim)\rvalue_function_cont = function(a,h,f,o,x, model = model.np){\rpost = post_action(a,h,f,x,o)\rsim_data = NULL\rsim_data$inv = post[1]\rsim_data$exp = post[2]\rsim_data$foreign = post[3]\rvalue = (1-f) * a^0.5 * h^0.5 * M_d + f * a^0.5 * h^0.5 * M_m - as.numeric(x[1]\u0026gt;0)*(a+x[1])*p_a - (o\u0026gt;0)*F_M + exp(-r)*predict(model,as_tibble(sim_data))$predictions\rreturn(-value)\r}\r# initialize object to save optimal choices per time, per tech level, per experience and per action (invest, open fa)\roptim_choices_df = NULL\r# initialize value function (last period simply equal to revenue, as any action would violate optimality)\rvalue_function_opt = value_revenue\rfor (t in T:2){\rprint(paste(\u0026quot;Now optimizing time: \u0026quot;,t,sep=\u0026quot;\u0026quot;))\r# Calculate numerical estimate of value function for all states at time t\rif (t \u0026lt; T){\r# ! map random state (post-action and shock) to value, then regress on post_action\rstates_data = NULL\rstates_data$inv = state_space[1,,t]\rstates_data$exp = state_space[2,,t]\rstates_data$foreign = state_space[3,,t]\rstates_data = as_tibble(states_data) value_function_opt[,t] = predict(value_function_optim,newdata = states_data,se.fit=FALSE)\r#value_function_opt[,t] = predict(value_function_optim_gbm,as_tibble(states_data),n.trees=min_MSE_value)\r}\r# Non-parametric estimation of continuation value using numerical estimate of value function of the next period.\rK = post_action_vector(state_space[,,t-1],investment[,t-1],entry[,t-1])\r# collect variables into data frame\rsim_data = NULL\rsim_data$inv = K[1,]\rsim_data$exp = K[2,]\rsim_data$foreign = K[3,]\rsim_data$rev = value_function_opt[,t] # ! calculate numerical estimate of value function backwards\rsim_data = as_tibble(sim_data)\rsim_data = sim_data %\u0026gt;% filter(inv \u0026lt;= quantile(inv,0.99), exp \u0026lt;= quantile(exp,0.99))\r# Gradient Boosting\rset.seed(1)\r#gbm \u0026lt;- gbm(rev ~.,data = sim_data, dist = \u0026quot;gaussian\u0026quot;,interact=3,n.trees=1000,cv.folds=5,bag.fraction=1)\r#plotres(gbm)\r#min_MSE \u0026lt;- which.min(gbm$cv.error)\r#plotmo::plotmo(gbm, pmethod=\u0026quot;partdep\u0026quot;)\rrf \u0026lt;- ranger(rev ~ ., data = sim_data)\r#pdp::partial(rf,pred.var=\u0026quot;inv\u0026quot;,plot=TRUE)\r#pdp::partial(rf,pred.var=\u0026quot;entry\u0026quot;,plot=TRUE)\rfor (a in seq(min(state_space[1,,t-1]),quantile(state_space[1,,t-1],0.99), length.out = 5)){\rfor(h in seq(min(state_space[2,,t-1]),quantile(state_space[2,,t-1],0.99), length.out = 5)){\rfor(f in c(0,1)){\r# save optimal choices of investment and opening foreign affiliation\roptim_choice = array(NA,dim=c(1,2))\r# continuous optimization - fix: discrete case of opening foreign affiliation\roptimum = optim(par = c(0), fn = value_function_cont, lower=c(0), upper=c(100), method = \u0026quot;Brent\u0026quot;, a=a, h=h, f=f, o=0, model = rf)\roptim_choice = c(optimum$par,0)\roptim_value = -optimum$value\r# specifically check investment = 0, doesn\u0026#39;t seem to find corner solution\rif (- value_function_cont(a,h,f,0,0,model=rf) \u0026gt; optim_value){\roptim_choice = c(0,0)\roptim_value = -value_function_cont(a,h,f,0,0,model=rf)\r}\r#optimum = optim(par = c(0), fn = value_function_cont, lower=c(0), upper=c(100), method = \u0026quot;Brent\u0026quot;, a=a, h=h, f=f, o=1, model = rf)\r#if (-optimum$value \u0026gt; optim_value){\r# optim_choice = c(optimum$par,1)\r# optim_value = -optimum$value\r#}\r# specifically check investment = 0, doesn\u0026#39;t seem to find corner solution\rif (-value_function_cont(a,h,f,1,0,model=rf) \u0026gt; optim_value){\roptim_choice = c(0,1)\roptim_value = -value_function_cont(a,h,f,1,0,model=rf)\r}\raux = NULL\raux$time = t-1 # save period\raux$inv = a # state of technology level\raux$exp = h # state of experience\raux$foreign = f # state of domestic/multinational\raux$invest = optim_choice[1] # optimal investment\raux$open = optim_choice[2] # optimal entry\raux$value = optim_value # optimal value\roptim_choices_df = rbind(optim_choices_df,aux)\r}\r}\r}\roptim_choices_df = as_tibble(optim_choices_df)\roptim_choices_df = unnest(optim_choices_df,cols = c(time, inv, exp, foreign, invest, open, value) )\rif (t\u0026gt;2){\r# map optimal value to states\rtest_data = optim_choices_df %\u0026gt;% filter(time == t-1)\rnpseed(42)\rvalue_function_optim \u0026lt;- npreg(value ~ inv + exp + foreign,data = test_data)\r#value_function_optim_gbm \u0026lt;- gbm(value ~ inv + exp + foreign,data = test_data,dist = \u0026quot;gaussian\u0026quot;,interact=3,n.trees=1000,cv.folds=5)\r#min_MSE_value \u0026lt;- which.min(value_function_optim_gbm$cv.error)\r#plot(value_function_optim)\r#plotmo::plotmo(value_function_optim_gbm, pmethod=\u0026quot;partdep\u0026quot;)\r}\r}\r## [1] \u0026quot;Now optimizing time: 10\u0026quot;\r## [1] \u0026quot;Now optimizing time: 9\u0026quot;\r## [1] \u0026quot;Now optimizing time: 8\u0026quot;\r## [1] \u0026quot;Now optimizing time: 7\u0026quot;\r## [1] \u0026quot;Now optimizing time: 6\u0026quot;\r## [1] \u0026quot;Now optimizing time: 5\u0026quot;\r## [1] \u0026quot;Now optimizing time: 4\u0026quot;\r## [1] \u0026quot;Now optimizing time: 3\u0026quot;\r## [1] \u0026quot;Now optimizing time: 2\u0026quot;\r\rPlot results - per point in time\rPlots follow the paper “Deep neural networks algorithms for stochastic control\rproblems on finite horizon: numerical applications” by Bachouch et al. (2020).\noptim_choices_df %\u0026gt;% filter(foreign==0) %\u0026gt;% ggplot() + geom_raster(aes(x=inv,y=exp,fill=invest)) + ylab(\u0026quot;Expertise\u0026quot;)+\rxlab(\u0026quot;Technology level\u0026quot;)+\r#scale_fill_manual(values=c(\u0026quot;snow2\u0026quot;,\u0026quot;yellow\u0026quot;), na.value=\u0026quot;black\u0026quot;, name=\u0026quot;Investment\u0026quot;) +\rscale_fill_gradient2(low=\u0026quot;snow2\u0026quot;, high=\u0026quot;yellow\u0026quot;, na.value=\u0026quot;black\u0026quot;, name=\u0026quot;Investment\u0026quot;) +\rgeom_point(aes(x=inv,y=exp,size=ifelse(open, \u0026quot;enter\u0026quot;, \u0026quot;wait\u0026quot;),color=ifelse(open, \u0026quot;enter\u0026quot;, \u0026quot;wait\u0026quot;)),stroke = 0) +\rscale_size_manual(values=c(enter=1.5, wait=0), name=\u0026quot;Become multinational\u0026quot;) +\rscale_color_manual(values=c(enter=\u0026quot;forestgreen\u0026quot;, wait=\u0026quot;darkgray\u0026quot;),name=\u0026quot;Become multinational\u0026quot;)+\rfacet_wrap(~time,scales=\u0026quot;free\u0026quot;,labeller = label_both)+\rscale_y_continuous(labels = scales::number_format(accuracy = 0.1))+\rscale_x_continuous(labels = scales::number_format(accuracy = 0.1))+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))\r## Warning: Raster pixels are placed at uneven horizontal intervals and will be\r## shifted. Consider using geom_tile() instead.\r## Warning: Raster pixels are placed at uneven vertical intervals and will be\r## shifted. Consider using geom_tile() instead.\rThe results suggest that firms invest more, the higher their experience level relative to their technology level. They refrain from investing as long as their technology level is high relative to their experience. Furthermore, a firm becomes a multinational as soon as its productivity is high enough, i.e. for high values of technology level and experience.\n\rOptimal vs. random strategy\rPlot paths for firms with same stochastic shocks but one is behaving optimally, while the other one is behaving randomly.\noptim_firm_df = NULL\rrandom_firm_df = NULL\roptim_choices_df = round(optim_choices_df,2)\r# first firm is behaving randomly\rset.seed(12)\rrandom_firm_df$investment = pmax(0,runif(T, min = -2, max = 2))\rrandom_firm_df$entry = 0\rrandom_firm_df = as_tibble(random_firm_df)\rrandom_firm_df$entry[sample(1:T,1)] = 1\rrandom_firm_df$tech_level = 0\rrandom_firm_df$foreign = 0\rrandom_firm_df$exp = 0.5\rrandom_firm_df$profit = 0\rrandom_firm_df$time = 1\rrandom_firm_df$shock = 0\r# calculate profit for random firm\rrandom_firm_df$profit[1] = (1-random_firm_df$foreign[1])*random_firm_df$tech_level[1]^0.5*random_firm_df$exp[1]^0.5 * M_d + (random_firm_df$foreign[1])*random_firm_df$tech_level[1]^0.5*random_firm_df$exp[1]^0.5 * M_m - (random_firm_df$tech_level[1]+random_firm_df$investment[1])*p_a*as.numeric(random_firm_df$investment[1]\u0026gt;0) - random_firm_df$entry[1] *F_M\rfor (t in 2:T){\rrandom_firm_df$time[t] = t\rrandom_firm_df$tech_level[t] = random_firm_df$tech_level[t-1] + random_firm_df$investment[t-1]\rset.seed(t*1234)\rif (random_firm_df$investment[t-1]\u0026gt;0){\rx0 = random_firm_df$exp[t-1] * (1-kappa)\r}\relse {\rx0 = random_firm_df$exp[t-1]\r}\raux = snssde1d(N=2,drift = drift, diffusion = diffusion, x0 = x0,M=1, type=\u0026quot;ito\u0026quot;,Dt=1)\rrandom_firm_df$exp[t] = aux$X[2]\rrandom_firm_df$shock[t] = aux$X[2]/aux$X[1]\rrandom_firm_df$foreign[t] = random_firm_df$foreign[t-1] + random_firm_df$entry[t-1]\rrandom_firm_df$profit[t] = (1-random_firm_df$foreign[t])*random_firm_df$tech_level[t]^0.5*random_firm_df$exp[t]^0.5 * M_d +(random_firm_df$foreign[t])*random_firm_df$tech_level[t]^0.5*random_firm_df$exp[t]^0.5 * M_m - (random_firm_df$tech_level[t]+random_firm_df$investment[t])*p_a*as.numeric(random_firm_df$investment[t]\u0026gt;0) - random_firm_df$entry[t] *F_M\r}\r# second firm is behaving optimally (optimal choices those with smallest distance to state values)\rdist \u0026lt;- function(a, h, f, t, optim_choices_df. = optim_choices_df){\rdt \u0026lt;- data.table(sqrt((optim_choices_df[[\u0026quot;inv\u0026quot;]]-a)^2 + (optim_choices_df[[\u0026quot;exp\u0026quot;]]-h)^2 + (optim_choices_df[[\u0026quot;foreign\u0026quot;]]-f)^2+(optim_choices_df[[\u0026quot;time\u0026quot;]]-t)^2))\rreturn(data.table(Closest.V1 = which.min(dt$V1)))\r}\roptim_firm_df$investment = array(0,dim=c(10,1))\roptim_firm_df$entry = 0\roptim_firm_df = as_tibble(optim_firm_df)\roptim_firm_df$tech_level = 0\roptim_firm_df$foreign = 0\roptim_firm_df$exp = 0.5\roptim_firm_df$profit = 0\roptim_firm_df$time = 1\roptim_firm_df$shock = 0\rfor (t in 1:(T-1)){\roptim_firm_df$time[t] = t\r# get optimal actions based on state\roptim \u0026lt;- dist(optim_firm_df$tech_level[t],optim_firm_df$exp[t],optim_firm_df$foreign[t],t)\roptim_firm_df$investment[t] \u0026lt;- optim_choices_df$invest[optim$Closest.V1]\roptim_firm_df$entry[t] \u0026lt;- optim_choices_df$open[optim$Closest.V1]\roptim_firm_df$tech_level[t+1] = optim_firm_df$tech_level[t] + optim_firm_df$investment[t]\rset.seed((t+1)*1234)\rif (optim_firm_df$investment[t]\u0026gt;0){\rx0 = optim_firm_df$exp[t] * (1-kappa)\r}\relse {\rx0 = optim_firm_df$exp[t]\r}\raux = snssde1d(N=2,drift = drift, diffusion = diffusion, x0 = x0,M=1, type=\u0026quot;ito\u0026quot;,Dt=1)\roptim_firm_df$exp[t+1] = aux$X[2]\roptim_firm_df$shock[t+1] = aux$X[2]/aux$X[1]\roptim_firm_df$foreign[t+1] = optim_firm_df$foreign[t] + optim_firm_df$entry[t]\roptim_firm_df$profit[t] = (1-optim_firm_df$foreign[t])*optim_firm_df$tech_level[t]^0.5*optim_firm_df$exp[t]^0.5 * M_d +(optim_firm_df$foreign[t])*optim_firm_df$tech_level[t]^0.5*optim_firm_df$exp[t]^0.5 * M_m - (optim_firm_df$tech_level[t]+optim_firm_df$investment[t])*p_a*as.numeric(optim_firm_df$investment[t]\u0026gt;0) - optim_firm_df$entry[t] *F_M\r}\roptim_firm_df$time[T] = T\roptim_firm_df$profit[T] = (1-optim_firm_df$foreign[T])*optim_firm_df$tech_level[T]^0.5*optim_firm_df$exp[T]^0.5 * M_d + (optim_firm_df$foreign[T])*optim_firm_df$tech_level[T]^0.5*optim_firm_df$exp[T]^0.5 * M_m\r# plot policies\rrandom_firm_df$cumulated_profit = random_firm_df$profit optim_firm_df$cumulated_profit = optim_firm_df$profit for (t in 2:T){\rrandom_firm_df$cumulated_profit[t] = random_firm_df$cumulated_profit[t-1]+random_firm_df$profit[t] optim_firm_df$cumulated_profit[t] = optim_firm_df$cumulated_profit[t-1]+optim_firm_df$profit[t] }\rrandom_firm_df$strategy \u0026lt;- \u0026#39;random\u0026#39;\roptim_firm_df$strategy \u0026lt;- \u0026#39;optimal\u0026#39;\rdata \u0026lt;- rbind.data.frame(random_firm_df, optim_firm_df)\rp1 = ggplot()+ geom_step(data=data, aes(x=time,y=investment,colour=strategy),size=0.75,linetype=\u0026quot;longdash\u0026quot;)+\rylab(\u0026quot;Investment\u0026quot;)+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))+\r#scale_color_viridis(discrete = TRUE,option = \u0026quot;D\u0026quot;)\rscale_colour_manual(values = c(\u0026#39;optimal\u0026#39; = \u0026quot;#0D0887FF\u0026quot;,\r\u0026#39;random\u0026#39; = \u0026#39;#CC4678FF\u0026#39;))\rp2 = ggplot()+ geom_step(data=data, aes(x=time,y=foreign,colour=strategy),size=0.75,linetype=\u0026quot;longdash\u0026quot;)+\rylab(\u0026quot;Entry\u0026quot;)+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))+\r#scale_color_viridis(discrete = TRUE,option = \u0026quot;D\u0026quot;)\rscale_colour_manual(values = c(\u0026#39;optimal\u0026#39; = \u0026quot;#0D0887FF\u0026quot;,\r\u0026#39;random\u0026#39; = \u0026#39;#CC4678FF\u0026#39;))\rp3 = ggplot()+ geom_line(data=data, aes(x=time,y=tech_level,colour=strategy),size=0.75)+\rylab(\u0026quot;Technology level\u0026quot;)+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))+\r#scale_color_viridis(discrete = TRUE,option = \u0026quot;D\u0026quot;)\rscale_colour_manual(values = c(\u0026#39;optimal\u0026#39; = \u0026quot;#0D0887FF\u0026quot;,\r\u0026#39;random\u0026#39; = \u0026#39;#CC4678FF\u0026#39;))\rp4 = ggplot()+ geom_line(data=data, aes(x=time,y=exp,colour=strategy),size=0.75)+\rylab(\u0026quot;Expertise\u0026quot;)+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))+\r#scale_color_viridis(discrete = TRUE,option = \u0026quot;D\u0026quot;)\rscale_colour_manual(values = c(\u0026#39;optimal\u0026#39; = \u0026quot;#0D0887FF\u0026quot;,\r\u0026#39;random\u0026#39; = \u0026#39;#CC4678FF\u0026#39;))\rp5 = ggplot()+ geom_line(data=data, aes(x=time,y=cumulated_profit,colour=strategy),size=0.75)+\rylab(\u0026quot;Cumulated profit\u0026quot;)+\rtheme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\rpanel.background = element_blank(), axis.line = element_line(colour = \u0026quot;black\u0026quot;))+\r#scale_color_viridis(discrete = TRUE,option = \u0026quot;D\u0026quot;)\rscale_colour_manual(values = c(\u0026#39;optimal\u0026#39; = \u0026quot;#0D0887FF\u0026quot;,\r\u0026#39;random\u0026#39; = \u0026#39;#CC4678FF\u0026#39;), name=\u0026quot;Strategy\u0026quot;)+\rtheme(legend.key = element_rect(colour = NA, fill = NA))\rfigure \u0026lt;- ggpubr::ggarrange(ggpubr::ggarrange(p1, p2,ncol=2,legend = \u0026quot;none\u0026quot;),\rggpubr::ggarrange(p3, p4,ncol=2,legend = \u0026quot;none\u0026quot;), p5,\rnrow = 3,\r#labels = c(\u0026quot;Panel A: Actions\u0026quot;, \u0026quot;Panel B: States\u0026quot;, \u0026quot;Panel C: Profit\u0026quot;),\r#font.label = list(size = 11, color = \u0026quot;black\u0026quot;, face =\u0026quot;bold.italic\u0026quot;, family = NULL),\rvjust = 0,\rcommon.legend = TRUE, legend = \u0026quot;bottom\u0026quot;)\rfigure\r\r\r","date":1589932800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589932800,"objectID":"8f11dc5a5602a3ee1320eb2b8add45e7","permalink":"/project/optimal_stochastic_control/","publishdate":"2020-05-20T00:00:00Z","relpermalink":"/project/optimal_stochastic_control/","section":"project","summary":"This markdown illustrates how to solve optimal stochastic control problems or combinations thereof using a forward simulation and backward optimization approach.","tags":["R","Macroeconomics"],"title":"Optimal Stochastic Control","type":"project"},{"authors":null,"categories":null,"content":"\rThis markdown is based on work related to the project “Religion as an insurance” (joint work with Tiago Cavalcanti, Sriya Iyer, Chris Rauh and Maryam Vaziri) in which we use primary data from Rio de Janeiro about people’s socioeconomic circumstances, their perception about the future and their religiousness. The markdown aims to illustrate how to use specific location data and polygons to visualize data using ggmap.\nLoad the dataset\rbrazil_dta \u0026lt;- read_dta(\u0026quot;brazil.dta\u0026quot;)\r\rPlot map of Rio de Janeiro and locations of interviewees\rqmplot(longitude,latitude,data=brazil_dta,mapcolor=\u0026quot;bw\u0026quot;,source=\u0026quot;stamen\u0026quot;,maptype = \u0026quot;terrain\u0026quot;,zoom=10,color=\u0026quot;red\u0026quot;,alpha=0.5,size=1,extent = \u0026quot;device\u0026quot;,margins=TRUE)+\rtheme_set(theme_bw())+\rtheme(legend.position = \u0026quot;none\u0026quot;)+\rxlab(\u0026quot;longitude\u0026quot;)+\rylab(\u0026quot;latitute\u0026quot;)\r\rPlot police districts from shapefile\rrequire(rgdal)\rrequire(ggplot2)\rshp \u0026lt;- raster::shapefile(\u0026quot;lm_dp_2019.shp\u0026quot;)\rsummary(shp@data)\r## dp aisp st_area_sh st_length_ ## Length:137 Length:137 Min. :0.0001266 Min. :0.05798 ## Class :character Class :character 1st Qu.:0.0016328 1st Qu.:0.28136 ## Mode :character Mode :character Median :0.0148845 Median :0.76807 ## Mean :0.0279889 Mean :0.93000 ## 3rd Qu.:0.0418780 3rd Qu.:1.38483 ## Max. :0.2328915 Max. :4.98608\rmap \u0026lt;- ggplot() + geom_polygon(data = shp, aes(x = long, y = lat, group = group), colour = \u0026quot;black\u0026quot;, fill = NA)\rmap + theme_void()\rshp \u0026lt;- spTransform(shp, CRS(\u0026quot;+proj=longlat +datum=WGS84\u0026quot;))\r\rPlot maps visualizing crime stats per police district\rIn fact, we combine official crime stats per police district such as murders, robberies and thefts per capita with interviewees’ perception of safety.\ncrime_data \u0026lt;- read.csv(\u0026quot;BaseDPEvolucaoMensalCisp.csv\u0026quot;,sep=\u0026quot;;\u0026quot;)\rpopulation \u0026lt;- read.csv(\u0026quot;PopulacaoEvolucaoAnualCisp.csv\u0026quot;,sep=\u0026quot;;\u0026quot;)\r# group crime data for year 2018\rcrime_data %\u0026gt;% left_join(population,by=c(\u0026quot;vano\u0026quot;, \u0026quot;CISP\u0026quot;=\u0026quot;circ\u0026quot;)) %\u0026gt;% filter(vano==\u0026quot;2018\u0026quot;) %\u0026gt;% group_by(CISP) %\u0026gt;% summarise(abs_hom_doloso=sum(hom_doloso),\rabs_roubos=sum(total_roubos),\rabs_furtos=sum(total_furtos),\rpc_hom_doloso=sum(hom_doloso/as.numeric(pop)),\rpc_total_roubos=sum(total_roubos/as.numeric(pop)),\rpc_total_furtos=sum(total_furtos/as.numeric(pop))) -\u0026gt; crime_data_2018\r# treat outlier island\rcrime_data_CISP1 \u0026lt;- crime_data_2018 %\u0026gt;% filter(CISP==1) %\u0026gt;% mutate(pc_hom_doloso=NA,\rpc_total_roubos=NA,\rpc_total_furtos=NA)\rcrime_data_2018 \u0026lt;- rbind(crime_data_CISP1,crime_data_2018[crime_data_2018$CISP!=1,])\rshp_df \u0026lt;- fortify(shp, region = \u0026quot;dp\u0026quot;)\rshp_crime \u0026lt;- merge(shp_df, crime_data_2018, by.x=\u0026quot;id\u0026quot;,by.y=\u0026quot;CISP\u0026quot;)\r# plot shape file with crime data on map\rggplot()+\rgeom_polygon(aes(x=long, y=lat, group=group, fill= pc_hom_doloso), size=.2,color=\u0026#39;black\u0026#39;, data=shp_crime, alpha=1)+\rscale_fill_gradient(high = \u0026quot;#FF6347\u0026quot;, low = \u0026quot;#90EE90\u0026quot;,name=\u0026quot;murders per capita in 2018\u0026quot;)+\rgeom_point(aes(x=longitude,y=latitude,color=as.numeric(as_factor(safety))),alpha=1,data=brazil_dta)+\rscale_color_gradient(high = \u0026quot;#00FF00\u0026quot;, low = \u0026quot;#FF0000\u0026quot;,name=\u0026quot;perceived safety\u0026quot;,limits=c(0,10))+\rcoord_map(xlim = c(-44, -42.75),ylim = c(-23.1, -22.5))\r# plot shape file with crime data on map\rggplot()+\rgeom_polygon(aes(x=long, y=lat, group=group, fill= pc_total_roubos), size=.2,color=\u0026#39;black\u0026#39;, data=shp_crime, alpha=1)+\rscale_fill_gradient(high = \u0026quot;#FF6347\u0026quot;, low = \u0026quot;#90EE90\u0026quot;,name=\u0026quot;robberies per capita in 2018\u0026quot;)+\rgeom_point(aes(x=longitude,y=latitude,color=as.numeric(as_factor(safety))),alpha=1,data=brazil_dta)+\rscale_color_gradient(high = \u0026quot;#00FF00\u0026quot;, low = \u0026quot;#FF0000\u0026quot;,name=\u0026quot;perceived safety\u0026quot;,limits=c(0,10))+\rcoord_map(xlim = c(-44, -42.75),ylim = c(-23.1, -22.5))\r# plot shape file with crime data on map\rggplot()+\rgeom_polygon(aes(x=long, y=lat, group=group, fill= pc_total_furtos), size=.2,color=\u0026#39;black\u0026#39;, data=shp_crime, alpha=1)+\rscale_fill_gradient(high = \u0026quot;#FF6347\u0026quot;, low = \u0026quot;#90EE90\u0026quot;,name=\u0026quot;thefts per capita in 2018\u0026quot;)+\rgeom_point(aes(x=longitude,y=latitude,color=as.numeric(as_factor(safety))),alpha=1,data=brazil_dta)+\rscale_color_gradient(high = \u0026quot;#00FF00\u0026quot;, low = \u0026quot;#FF0000\u0026quot;,name=\u0026quot;perceived safety\u0026quot;,limits=c(0,10))+\rcoord_map(xlim = c(-44, -42.75),ylim = c(-23.1, -22.5))\r\r","date":1574208000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574208000,"objectID":"abe57a7551f831840613d09b3833b572","permalink":"/project/brazil/","publishdate":"2019-11-20T00:00:00Z","relpermalink":"/project/brazil/","section":"project","summary":"The markdown aims to illustrate how to use specific location data and polygons to visualize data using ggmap.","tags":["R"],"title":"Rio de Janeiro crime map","type":"project"},{"authors":["Christian Roerig"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Christian Roerig","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Christian Roerig","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9260a1bd38ad457fcbbc5d4ca2b02951","permalink":"/codes/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/codes/","section":"","summary":"Here is a collection of some coding adventures I have been up to","tags":null,"title":"Codes","type":"widget_page"}]